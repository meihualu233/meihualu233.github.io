<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Meihualu&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://meihualu233.github.io/"/>
  <updated>2016-09-21T02:31:54.371Z</updated>
  <id>http://meihualu233.github.io/</id>
  
  <author>
    <name>meihualu233</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://meihualu233.github.io/2017/09/19/hello-world/"/>
    <id>http://meihualu233.github.io/2017/09/19/hello-world/</id>
    <published>2017-09-19T03:51:03.649Z</published>
    <updated>2016-09-21T02:31:54.371Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a><br>懒惰的我，就不把这个hexo的宣传页给去了</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>2017 ACM-ICPC World Finals</title>
    <link href="http://meihualu233.github.io/2017/05/26/acm/"/>
    <id>http://meihualu233.github.io/2017/05/26/acm/</id>
    <published>2017-05-26T01:08:37.000Z</published>
    <updated>2017-05-26T02:34:51.924Z</updated>
    
    <content type="html"><![CDATA[<p>2017年的acm-icpc final题，做了比较简单的两道题目，挖个坑以后慢慢填。</p><a id="more"></a><p>E.Need for Speed<br>题目大意是给你n段路程的长度和对应段仪表盘上的速度s，还有总时间t。计算仪表盘上速度的偏移。偏移可能是负数。<br>直接二分就好,因为精度处理不好会出现超时，所以直接二分200次肯定能够收敛。<br>c++代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include&lt;string&gt;</div><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;algorithm&gt;</div><div class="line">#include&lt;math.h&gt;</div><div class="line">#include&lt;stack&gt;</div><div class="line">#include&lt;string.h&gt;</div><div class="line">#include&lt;map&gt;</div><div class="line">#include&lt;vector&gt;</div><div class="line">using namespace std;</div><div class="line"></div><div class="line">const int N =1005;</div><div class="line">int n,t;</div><div class="line">int d[N],s[N];</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    while(scanf(&quot;%d %d&quot;,&amp;n,&amp;t)==2)</div><div class="line">    &#123;</div><div class="line">        double low = -1e10;</div><div class="line">        double mid;</div><div class="line">        for(int i=0;i&lt;n;i++)</div><div class="line">        &#123;</div><div class="line">            scanf(&quot;%d %d&quot;,&amp;d[i],&amp;s[i]);</div><div class="line">            low = max(low,-1.0*s[i]);</div><div class="line">        &#125;</div><div class="line">        double high=1e10;</div><div class="line">        for(int it=0;it&lt;200;it++)&#123;</div><div class="line">            mid = 0.5*(low+high) ;</div><div class="line">            double sum=0.0;</div><div class="line">            for(int i=0;i&lt;n;i++)</div><div class="line">            &#123;</div><div class="line">                sum+=d[i] /( s[i]+mid);</div><div class="line">            &#125;</div><div class="line">            if( sum &gt; t)</div><div class="line">                low = mid;</div><div class="line">            else high=mid;</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%.9lf\n&quot;,mid);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>python3 代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># 二分</div><div class="line">n,t = map(int ,input().split())</div><div class="line"></div><div class="line">low = -1e10</div><div class="line">d=[]</div><div class="line">s=[]</div><div class="line">for i in range(0,n):</div><div class="line">dd,ss = map(int,input().split())</div><div class="line">d.append(dd)</div><div class="line">s.append(ss)</div><div class="line">low  = max(low,-1.0*s[i]) </div><div class="line">high = 1e10</div><div class="line">for it in range(1,200):</div><div class="line">mid = 0.5 * (low+high)</div><div class="line">sum = 0.0</div><div class="line">for i in range(0,n):</div><div class="line">sum += d[i] / (s[i]+mid)</div><div class="line">if sum &gt;t:</div><div class="line">low =mid</div><div class="line">else:</div><div class="line">high = mid</div><div class="line"></div><div class="line">print(mid)</div></pre></td></tr></table></figure></p><p>I.Secret Chamber at Mount Rushmore<br>题目大意总共26个小写字母，一个字母可以变成另外一个，给你n中变换，m次询问，询问某个单词能否变成另外一个。<br>用floyd直接求出26个字母的闭包。<br>c++<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include&lt;string&gt;</div><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;algorithm&gt;</div><div class="line">#include&lt;math.h&gt;</div><div class="line">#include&lt;stack&gt;</div><div class="line">#include&lt;string.h&gt;</div><div class="line">#include&lt;map&gt;</div><div class="line">#include&lt;vector&gt;</div><div class="line">using namespace std;</div><div class="line"></div><div class="line">const int N = 505;</div><div class="line">int n,m;</div><div class="line">int a[35][35];</div><div class="line">char x,y;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    while(scanf(&quot;%d %d&quot;,&amp;n,&amp;m)==2)</div><div class="line">    &#123;</div><div class="line">        for(int i=0;i&lt;26;i++) a[i][i]=1;</div><div class="line">        for(int i=0;i&lt;n;i++)</div><div class="line">        &#123;</div><div class="line">            cin&gt;&gt;x&gt;&gt;y;</div><div class="line">            a[x-&apos;a&apos;][y-&apos;a&apos;]=1;</div><div class="line">        &#125;</div><div class="line">        for(int k=0;k&lt;26;k++)</div><div class="line">            for(int i=0;i&lt;26;i++)</div><div class="line">                for(int j=0;j&lt;26;j++)</div><div class="line">                    a[i][j] |= (a[i][k] &amp;&amp; a[k][j]);</div><div class="line">        while(m--)</div><div class="line">        &#123;</div><div class="line">            char str1[N],str2[N];</div><div class="line">            cin&gt;&gt;str1&gt;&gt;str2;</div><div class="line">            int ok=0;</div><div class="line">            if(strlen(str1) ==strlen(str2)) ok=1;</div><div class="line">            if(ok)</div><div class="line">            &#123;</div><div class="line">                for(int i=0;i&lt;strlen(str1);i++)</div><div class="line">                &#123;</div><div class="line">                    if( a[str1[i]-&apos;a&apos;][str2[i]-&apos;a&apos;] ==1) ;</div><div class="line">                    else ok=0;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(ok==0) puts(&quot;no&quot;);</div><div class="line">            else puts(&quot;yes&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>python3 代码：<br>这里就是要注意python里面怎么创建二维数组.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import string</div><div class="line"></div><div class="line">n,m = map(int , input().split())</div><div class="line">a = [ [0]*26 for i in range(0,26)]</div><div class="line"></div><div class="line">for i in range(0,26):</div><div class="line">a[i][i]=1</div><div class="line">for i in range(0,n):</div><div class="line">x,y=input().split()</div><div class="line">a[ord(x)-ord(&apos;a&apos;)][ord(y)-ord(&apos;a&apos;)]=1</div><div class="line">for k in range(0,26):</div><div class="line">for i in range(0,26):</div><div class="line">for j in range(0,26):</div><div class="line">a[i][j] = a[i][j] or (a[i][k] and a[k][j])</div><div class="line"></div><div class="line">while m:</div><div class="line">str1,str2 = input().split()</div><div class="line">ok=0</div><div class="line">if len(str1)==len(str2):</div><div class="line">ok=1</div><div class="line">if ok==1:</div><div class="line">for i in range(0,len(str1)):</div><div class="line">if a[ord(str1[i])-ord(&apos;a&apos;)][ord(str2[i])-ord(&apos;a&apos;)]!=1:</div><div class="line">ok=0</div><div class="line">if ok==0:</div><div class="line">print(&quot;no&quot;)</div><div class="line">else:</div><div class="line">print(&quot;yes&quot;)</div><div class="line">m=m-1</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017年的acm-icpc final题，做了比较简单的两道题目，挖个坑以后慢慢填。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="解题报告" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="Python" scheme="http://meihualu233.github.io/tags/Python/"/>
    
      <category term="c/c++" scheme="http://meihualu233.github.io/tags/c-c/"/>
    
  </entry>
  
  <entry>
    <title>分布式爬虫学习笔记-虚拟环境Virtualenv搭建</title>
    <link href="http://meihualu233.github.io/2017/05/06/spider-1/"/>
    <id>http://meihualu233.github.io/2017/05/06/spider-1/</id>
    <published>2017-05-06T10:13:42.000Z</published>
    <updated>2017-05-06T10:29:30.496Z</updated>
    
    <content type="html"><![CDATA[<p>一直都想自己去学习一下爬虫，借慕课网出了分布式爬虫的课程的机会，就来跟着大神来学习一下分布式爬虫。今天踩了了一下virtualenv在windows上搭建的坑。就索性mark一下。<br><a id="more"></a></p><h2 id="为什么要选择用Virtualenv"><a href="#为什么要选择用Virtualenv" class="headerlink" title="为什么要选择用Virtualenv"></a>为什么要选择用Virtualenv</h2><p>因为Python有2和3的区别，用Virtualenv可以使得开发环境隔离开不受到影响。暂时还没体验过这个的好处，但是我就是想把这个给配置好。</p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>安装Virtualenv，首先<br>‘’’<br>pip install virtualenv<br>‘’’<br>即可，可以使用一些比较快的镜像源，比如豆瓣源。不过貌似速度没多少区别（233）。<br>安装好了之后，可以自行定一个目录来搭建环境。<br>比如选择，把工程放在 E:/test/ 下，使用python2<br>就在cmd下进到这个目录,然后<br>‘’’<br>virtualenv -p <strong><em> ###<br>‘’’<br>其中 </em></strong> 是你Python要用的版本（C:\Python27\python.exe）</p><h3 id="是你取的虚拟环境所在的目录名字"><a href="#是你取的虚拟环境所在的目录名字" class="headerlink" title="是你取的虚拟环境所在的目录名字"></a>是你取的虚拟环境所在的目录名字</h3><hr><p>好了下面说下问题，按照这样的步骤配置好后,可以在刚刚建立的目录中找到一个Scripts的文件里面应该有一个activate.bat。运行这个就能进入虚拟环境，但是<br>我木有，类似Stackoverflow上这个<a href="http://stackoverflow.com/questions/33010458/cannot-create-virtual-environment-with-setuptools-pip-wheel-failed-with-error-c" target="_blank" rel="external">问题</a></p><p>解决方法也比较简单，就是你的python的安装路径中不要有空格和中文出现….</p><hr><p>END.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直都想自己去学习一下爬虫，借慕课网出了分布式爬虫的课程的机会，就来跟着大神来学习一下分布式爬虫。今天踩了了一下virtualenv在windows上搭建的坑。就索性mark一下。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://meihualu233.github.io/tags/Python/"/>
    
      <category term="Virtualenv搭建" scheme="http://meihualu233.github.io/tags/Virtualenv%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>研究生活-5</title>
    <link href="http://meihualu233.github.io/2017/05/02/gs-life-5/"/>
    <id>http://meihualu233.github.io/2017/05/02/gs-life-5/</id>
    <published>2017-05-02T00:02:00.000Z</published>
    <updated>2017-05-02T00:13:02.625Z</updated>
    
    <content type="html"><![CDATA[<p>心里的话有时候怎么都写不出来，好久没来这里更新点东西了，看了下上次最新的更新记录，上一次还是更新是在三月的春节。<br><a id="more"></a><br>如果数一下时间突然发现2017已经过完了一个三分之一了，时间真的很快，我是在慢慢变老还是在慢慢成长呢？每天都要比昨天过的更好，这就够了。</p><p>五一假日去了杭州，见了许久不见的同学。人还是要和人打交道才有趣，旅游的目的要么是看风景，赏大自然鬼斧神工；要么是看人，与三两好友风花雪月。</p><p>短暂的休息是为了更好的生活，体验了另一种生活之后，生活又会回到正轨。加油加油！为了以后遇见的时候能变得更好，现在要加倍努力啊~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;心里的话有时候怎么都写不出来，好久没来这里更新点东西了，看了下上次最新的更新记录，上一次还是更新是在三月的春节。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>openssl相关的坑</title>
    <link href="http://meihualu233.github.io/2017/02/22/openssl/"/>
    <id>http://meihualu233.github.io/2017/02/22/openssl/</id>
    <published>2017-02-22T09:06:18.000Z</published>
    <updated>2017-02-22T09:12:53.664Z</updated>
    
    <content type="html"><![CDATA[<p>项目的代码里有用到openssl，今天搞了一下，<br>我的系统是win10 64位，用的vs2013 简单记录一下，害怕痴呆忘记了。<br>顺便也在这里记录一点openssl学习体会。</p><a id="more"></a><p>首先说一下，想快点用可以直接下载别人编译好的静态文件，<a href="http://blog.csdn.net/zy_strive_2012/article/details/54910695" target="_blank" rel="external">http://blog.csdn.net/zy_strive_2012/article/details/54910695</a><br>这个链接的博主挂出来的就能用。</p><p>要用最新的openssl库，下下来解压玩，看一下install文档，虽说是英文的耐心点就好。<br>还要下一个perl</p><hr><p>以后慢慢填坑</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目的代码里有用到openssl，今天搞了一下，&lt;br&gt;我的系统是win10 64位，用的vs2013 简单记录一下，害怕痴呆忘记了。&lt;br&gt;顺便也在这里记录一点openssl学习体会。&lt;/p&gt;
    
    </summary>
    
      <category term="安全" scheme="http://meihualu233.github.io/categories/%E5%AE%89%E5%85%A8/"/>
    
      <category term="CDP" scheme="http://meihualu233.github.io/categories/%E5%AE%89%E5%85%A8/CDP/"/>
    
    
      <category term="学习" scheme="http://meihualu233.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>实验室灾备项目CDP部分学习工作记录</title>
    <link href="http://meihualu233.github.io/2017/02/21/cdp/"/>
    <id>http://meihualu233.github.io/2017/02/21/cdp/</id>
    <published>2017-02-21T08:37:13.000Z</published>
    <updated>2017-03-27T03:42:59.156Z</updated>
    
    <content type="html"><![CDATA[<p>2017.2.20号布置的任务，3个礼拜要熟悉windows端的CDP的代码<br>挖坑开始每天记录一下自己对现在项目组工作的日志。</p><a id="more"></a><h2 id="2-20"><a href="#2-20" class="headerlink" title="2.20"></a>2.20</h2><p>计哥布置了我的任务，3月底实验室的灾备项目貌似是要上线，目前还有几个发现的bug。目前发现的两个BUG：<br>1.差异备份的时候，通过md5值比较数据块是否相同然后恢复，效率不如直接复制来的快。<br>2.海量存储时候，缓存写在硬盘直接读出在内存传输，数据可能会丢失。<br>下午，熟悉了下文档，觉得还是无从下手。</p><h2 id="2-21"><a href="#2-21" class="headerlink" title="2.21"></a>2.21</h2><p>看了邓健师兄的CDP设计文档，又一次熟悉了各个模块的功能，但是我觉得还是需要知道每个模块对应的代码，然而并不能从代码中发现多少端倪。</p><p>Q：生产服务器代码的入口在哪里。从哪里出发看。</p><p>1.windows文件系统中，卷是如何被分为几个部分进行的备份，对应的代码是什么样子的？<br>和linux有什么区别？（还不了解windows的文件系统）</p><p>2.当一个卷备份操作开始的时候<br>流程如下：<br>首先  海量缓存到本地 ，之后是什么流程传递到灾备机上的（代码哪里体现）<br>接着 在服务端是如何处理这些东东的（暂时不用知道）</p><p>灾备机 这里有 一个 镜像卷 日志卷<br>镜像卷负责当生产卷的镜子<br>日志卷 里 存的是被覆盖掉的老数据</p><p>3.恢复数据的时候，应该是先建立 生产服务器和灾备机的连接，然后获得要恢复的目标时间点，<br>通过虚拟卷重定向数据（流程到底是啥样的，对应的代码是什么）</p><p>在数据同步之前先对生产卷系统打一个快照<br>（windows下通过Snapshot快照模块调用VSS工具实现备份数据卷快照，<br>linux通过LVM管理工具实现逻辑卷的快照，<br>注意：对于linux下磁盘分区由于没有快照方法我们采用直接读取磁盘分区）<br>//<br>//这里在代码上是怎么体现的，在server端 哪里判断生产服务器是windows还是linux的<br>//</p><p>总结一下：发现自己需要先去了解一下windows的文件系统，今天不打算去研究代码。先搞清楚基本的数据结构。</p><h2 id="2-22"><a href="#2-22" class="headerlink" title="2.22"></a>2.22</h2><p>今天有一点点进展，虽然代码上没有啥突破。<br>1，导入了一下windows端的工程，上午+下午给自己电脑搞上了openssl的库<br>2，目前正在装svn，一会应该可以将winsnaplib.h的问题解决<br>3，今天又一次回顾了一下cdp备份的流程，基本上来说对于这个系统工作的方式比较熟悉，具体的细节有待去研究。</p><p>客户端代码里用到了很多openssl的函数，应该是建立生产机和灾备机连接是用到的内容。</p><p>接下来需要解决的几个方向：<br>1，一会，先跑一下代码看看<br>2，啃代码了，梳理一下各个函数和模块的关系<br>3，学习一下openssl里的内容<br>4，看一下师兄的论文</p><hr><p>我上午用vs导入了客户端的工程，编译了一下主要有两个问题。<br>1.openssl要自己配置一下，这个我自己弄好了<br>2.#include “WinSnapLib.h” 这个头文件貌似要一个 WinSnapLib.lib 依赖，不知道这是啥，该怎么弄</p><h2 id="2-23"><a href="#2-23" class="headerlink" title="2.23"></a>2.23</h2><p>今天从main入手看了下代码，感觉上几个最为重要的代码如下：</p><p>#include “Logger.h”                     写日志的吧。</p><p>#include “io_common.h”                  读写磁盘内容相关</p><p>#include “ProducerAndConsumerQueue.h”</p><p>#include “getVolSnapHandle.h”</p><p>#include “network_exp.h”</p><p>#include “CdpRecovery.h”</p><p>//这个应该是核心<br>CdpRecovery 用到了 {</p><p>#include “packet.h”</p><p>#include “io_common.h”</p><p>#include  “network_exp.h”</p><p>#include “CdpRecovery.h”</p><p>#include “Logger.h”<br>}</p><p>记录一下各个模块用的主要函数、数据结构<br>io_common{</p><p>#include “ntddvol.h”</p><p>#include “io_common.h”</p><p>#include “BootFormat.h”   —-这个里面的数据结构 主要是NTFS和FAT32</p><p>#include “Logger.h”<br>}</p><p>过了一遍Logger和io_common</p><h2 id="2-24"><a href="#2-24" class="headerlink" title="2.24"></a>2.24</h2><p>network  、 network_exp  这两个的区别<br>个人感觉 network_exp 负责传输过程中出现问题后的重传<br>network 负责传输 </p><p>这三个是干啥的<br>int Respond_To_Controller(SSL <em>ssl,char </em>answer);<br>int Send_CTL_To_RS(char <em>RS_ip,int RS_port,char </em>buf,int len,int <em>err,int</em> task_id=NULL);<br>int Send_Request_To_RS(char <em>RS_ip,int RS_port,char </em>send_buf,int send_len,char <em>rev_buf,int rev_len,int </em>err);</p><p>在CdpRecovery.cpp里全还原和增量还原的代码是一样的。<br>接下来，先研究一下全还原代码的实现。</p><h2 id="2-27"><a href="#2-27" class="headerlink" title="2.27"></a>2.27</h2><p>fullrecovery 流程：int FullRecovery::init()<br>1.ProducerAndConsumerQueue初始化<br>2.数据准备 data_rebulid<br>3.初始化写入卷的句柄和套接字结构体 建立网络连接 init_member_data<br>4.发送恢复请求 send_recovery_request （感觉有问题 :-D )</p><ol><li>creatThread send_packet 建立线程开始发送包</li><li>creatThread write_packet 写线程</li></ol><p>疑问：</p><hr><p><strong><strong>这是结构体是啥<strong>*</strong></strong></strong></p><hr><p>//初始化同步恢复进度结构体<br>    memset(&amp;(this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process),0x00,sizeof(SYNC_RECV_PROCESS));<br>    this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.task_id = this-&gt;ptr_recov_taskinfo-&gt;taskid;<br>    this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.volume_index = this-&gt;ptr_recov_taskinfo-&gt;current_vol_num;<br>    strcpy_s(this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.volume_name,MAX_VOLUME_NAME,this-&gt;ptr_recov_taskinfo-&gt;target_volume[this-&gt;ptr_recov_taskinfo-&gt;current_vol_num]);<br>    this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.volume_size = this-&gt;ptr_recov_taskinfo-&gt;vols_size[this-&gt;ptr_recov_taskinfo-&gt;current_vol_num];<br>    this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.offset=this-&gt;ptr_recov_taskinfo-&gt;current_vol_offset;<br>    this-&gt;ptr_recov_taskinfo-&gt;sync_recv_process.recovey_mode=this-&gt;ptr_recov_taskinfo-&gt;tasktype;</p><hr><p>CdpRecovery.cpp 252行 这里有发送请求到RS么？</p><p>typedef struct _syncRecovTaskinfo //这是啥结构体，做啥的 ？ 回复任务的ID、种类、模式？</p><p>DiffSyncProcess和SyncProcess在做啥？</p><p>看完了</p><p>#include “Logger.h”                     写日志的吧。</p><p>#include “io_common.h”                  读写磁盘内容相关</p><p>#include “ProducerAndConsumerQueue.h”   消息队列加锁</p><p>#include “getVolSnapHandle.h”        打快照的</p><p>#include “network_exp.h”        通信传输数据</p><p>#include “CdpRecovery.h”        全恢复和差异恢复</p><p>这6个部分的代码之后我发现，还需搞懂的问题：</p><p>1，生产服务器是在什么时候将文件内容写入海量缓存的？<br>2，快照在哪里使用？</p><p>上面6个部分完全没有这方面的信息。<br>DrcSender 在干嘛。。如果说它是在传输文件数据，那么network_exp在干嘛。。负责安全传输？<br>DiffSyncProcess是在做什么<br>MassBuffer 应该是海量缓存的实现代码<br>以上应该就是核心代码的内容了。。还有好多没理解的问题。</p><h2 id="2-28"><a href="#2-28" class="headerlink" title="2.28"></a>2.28</h2><p>梳理一下 恢复的流程：<br>在恢复的代码里有3个大类：RecoveryTask、FullRecovery和DiffRecovery<br>RecoveryTask类中写的是全恢复和增量恢复中公用的一些功能函数（恢复前的数据准备函数，句柄套接字）</p><p>当客户端，发起一个恢复请求的时候，先建立一个RecoveyTask的线程，然后判断是要全恢复还是增量恢复。</p><p>同步过程:</p><p>同步的过程里有用到快照</p><p>同步 恢复 的代码基本上了解了<br>怎么截获读写的？ 备份是怎样做的</p><p>DRGlobalInfo.xml<br>DR  RS</p><p>drc_common pt_task</p><p>request_function.cpp 778行加的这段代码有什么意义？</p><hr><p>系统和卷操作<br>1，在最高层，应用程序要知道用户环境中存在那些逻辑驱动器（GetLogicalDrives）<br>2，判断每个驱动器的类型 （getDriveType）<br>3，得到卷的特定信息（getVolumeInformation）</p><hr><p>下午的时候，亮哥给我们讲了一下windows端的代码，主要从main函数入手，一开始就启了两个线程serverthread和startsender，serverthread负责第一次和灾备的同步，它打一个当前生产服务器卷的快照，同步到灾备端。第二个线程startsender启动之后又会启3个线程，分别是读取、打包、传输。<br>在生产端每一次数据变化会被截获，写入到海量缓存之中。之后通过startsender线程传输至灾备端。</p><hr><p>之后要从这几个线程入手开始研究具体的代码，将所有的结构体记录下来有助于梳理代码。</p><h2 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h2><p>今天状态不是很好，进展比较慢。从main函数的两个线程入手（startsender和therverthread），还研究了一下各个结构体之间的关系。代码很复杂明天接着看。</p><p>DevControl 控制驱动<br>全局的 DevControl* ioct1</p><p>NSFD_FBLK_READ_INFO fri = { 0 };//结构体可以这样初始化么？ lzn</p><p>startsender -&gt; initsender-&gt;{</p><p>initMassBuffer<br>initDriver(初始化驱动相关信息 1.传递海量缓存文件块给驱动 2.发送模块与驱动之间的流量信息共享内存)<br>initMemory<br>InitExecuteRes<br>initGlobal<br>}</p><p>initDriver-&gt;SetDrvBufferBlock（获取第一个过滤驱动设备对象的句柄）</p><h2 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h2><p>startsender -&gt; initsender-&gt;{</p><p>initMassBuffer<br>initDriver(初始化驱动相关信息 1.传递海量缓存文件块给驱动 2.发送模块与驱动之间的流量信息共享内存)<br>initMemory<br>InitExecuteRes<br>initGlobal<br>}</p><p>initDriver-&gt;SetDrvBufferBlock（获取第一个过滤驱动设备对象的句柄）<br>initMemory  初始化了rbQueue //TODO: there always warning 6011, but we don’t know how to fix it.<br>initExecuteRes{<br>    threadReader -&gt;(readEvent)-&gt; ReadNextRecord(读任务列表) 简单理解为将记录打包<br>        -&gt; IncReader-&gt;IncSender<br>}</p><p>看到目前的状态，感觉需要去先学习一下多线程，以前没怎么接触过windows的多线程。</p><p>研究msdn的多线程<br><a href="https://msdn.microsoft.com/zh-cn/library/aa909196.aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/aa909196.aspx</a><br>博客<br><a href="http://blog.csdn.net/morewindows/article/details/7392749" target="_blank" rel="external">http://blog.csdn.net/morewindows/article/details/7392749</a> 这个博客写的不错</p><p>多线程的互斥和同步</p><p>关键段（临界区）可以用于线程间的互斥，但不可以用于同步</p><p>事件（Event）可以实现线程间的同步</p><h2 id="3-3"><a href="#3-3" class="headerlink" title="3.3"></a>3.3</h2><p>学习windows多线程中。<br>在项目的代码里面使用了Mutex和信号量有点难以理解。<br>先记录一下，线程同步互斥机制的几个关键内容——关键段、事件、互斥量、信号量</p><h2 id="3-6"><a href="#3-6" class="headerlink" title="3.6"></a>3.6</h2><p>在windows端海量缓存的实现中，代码里用到了 文件映射。<br>海量缓存是一个大文件<br>传统文件访问方式是，首先用open西戎调用打开文件，然后使用read、write以及lseek等调用进行顺序I/O<br>这种方式非常低效<br>海量缓存的方法则：<br>通过一定的机制将页面映射到进程的地址空间中，首先通过简单的产生某些内存管理数据结构完成映射的创建，<br>当进程访问页面时产生一个缺页终端，内核将页面读入内存并且封信页表指向该页面。</p><p>总的来说我的理解就是，项目中海量缓存的内容存在c盘里，然后发送模块在发送的的时候通过文件映射的方式使用共享读来发送内容。所以不存在linux端的问题。<br>文件映射完成海量缓存过程<br>SetDefaultMassBuffer<br>CreateBufferFile ｛<br>    -&gt;判断是否为NTFS系统<br>    -&gt;createfile 创建/打开文件内核对象<br>    -&gt;createfilewithsize通过文件映射 创建一个指定大小的文件<br>    -&gt;createfilemapping 创建文件映射内核对象<br>｝</p><h2 id="3-7"><a href="#3-7" class="headerlink" title="3.7"></a>3.7</h2><p>捣鼓winsnaplib.lib的编译中.</p><h2 id="3-8"><a href="#3-8" class="headerlink" title="3.8"></a>3.8</h2><p>捣鼓winsnaplib.lib编译的第二天。<br>熟悉了recovery的过程。思考了下如何更改增量备份</p><p>全恢复的过程：<br>begin_Recovert -&gt;[full,diff]-&gt; start()<br>-&gt; init(){<br>    init_queue()<br>    data_rebuild() 数据准备<br>    init_member_data()<br>    send_recovery_request()<br>    CreateThread( send_thread ) ==&gt; 主要在这里修改<br>    CreateThread( write_thread)</p><pre><code>receive_packet </code></pre><p>}</p><h2 id="3-9"><a href="#3-9" class="headerlink" title="3.9"></a>3.9</h2><p>整理增量恢复和全恢复的代码，了解恢复的过程。<br>winsnaplib的问题依然棘手</p><h2 id="3-10"><a href="#3-10" class="headerlink" title="3.10"></a>3.10</h2><p>今天看了一下项目中用来处理sendthread 和 receivethread 的互斥同步问题的 producerAndConsumer队列的实现。<br>准备开始修改增量备份的代码了，熟悉了一下传输信息的结构体。</p><p>#3.13<br>时间过的是真的很快。<br>先mark一下，晚上健身房回来梳理一下今天遇到的坑。</p><h1 id="3-27"><a href="#3-27" class="headerlink" title="3.27"></a>3.27</h1><p>隔了好久没有更新，因为一直被海量缓存的工作原理所困惑着。暂时先不在这里更新内容了，这里就先停了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017.2.20号布置的任务，3个礼拜要熟悉windows端的CDP的代码&lt;br&gt;挖坑开始每天记录一下自己对现在项目组工作的日志。&lt;/p&gt;
    
    </summary>
    
      <category term="灾备" scheme="http://meihualu233.github.io/categories/%E7%81%BE%E5%A4%87/"/>
    
      <category term="CDP" scheme="http://meihualu233.github.io/categories/%E7%81%BE%E5%A4%87/CDP/"/>
    
    
      <category term="学习" scheme="http://meihualu233.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>研究生生活-4</title>
    <link href="http://meihualu233.github.io/2017/02/09/gs-life-4/"/>
    <id>http://meihualu233.github.io/2017/02/09/gs-life-4/</id>
    <published>2017-02-09T03:11:42.000Z</published>
    <updated>2017-06-15T03:49:30.955Z</updated>
    
    <content type="html"><![CDATA[<p>1月22号开始的寒假生活，其实早在1月14号就考完放假了。<br>这个窝也隔了好久没写东西。<br>今天是2月9号，研一下的生活就要开始了。<br><a id="more"></a></p><p>说实话，不知道该写些什么了。一种肚子里有很多话，但是就是不知道该怎么表达的感觉。那就简单点来把失踪了这几个月发生的事情梳理下吧。<br>应该是从去年（16年）11月中旬开始消失的，消失的主要原因是因为我谈恋爱了。果真爱情容易叫人沉迷（无奈脸），然后就是很开心的谈恋爱咯，知道今年（17年）1月21号分手了。不想写太多的文字来回忆这段恋情，结束了就让他结束掉吧。最好的方式或许就是不要见。<br>短时间内，不想去谈恋爱了。感觉自己还不够成熟，还有很多问题没有搞明白。</p><hr><p>然后说说寒假，寒假没回南京过年。今年跑到西双版纳来过冬，昆明这里确实暖和空气也好很多。蓝天白云，星星月亮，还有久违的花蝴蝶。让我都出现了一种想在这里直接安度晚年的想法，然后我摇着自己的脑袋告诉自己：“快醒醒吧，你现在还没有工作，没房没车。快滚去学习吧”于是乎，我就吓的去睡觉了。。。（还是寒假嘛~）</p><hr><p>当然这并不代表我寒假没有好好学习，我还是稍微努力的写了一篇论文做了点题目，看了些前沿科技的。。微不足道，不过我坚信未来这些做的都会有回报。</p><hr><p>锻炼上的事情确实是坚持下来了，整个寒假就这点我能骄傲自豪的说：“我没胖~”（+ +|）但是我寒假目标就是为了变重啊。。现在还是保持着68kg，何时才能长出结实的肌肉和迷人的腹肌呢。不知道哇，反正健身大业是现在我唯一做的最好的事情了。</p><hr><p>开学了，估计班级上会有一些杂事要做，实验室项目组里的事情肯定也会多起来，新的一学期幸好还有我自己陪着我自己，要好好努力哦。<br>PS：新年、新学期愿望，我要学会折纸！练出4快腹肌（8块最好）！变重变重！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1月22号开始的寒假生活，其实早在1月14号就考完放假了。&lt;br&gt;这个窝也隔了好久没写东西。&lt;br&gt;今天是2月9号，研一下的生活就要开始了。&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="寒假" scheme="http://meihualu233.github.io/tags/%E5%AF%92%E5%81%87/"/>
    
  </entry>
  
  <entry>
    <title>实验室培训之编码问题</title>
    <link href="http://meihualu233.github.io/2016/11/16/python-learning/"/>
    <id>http://meihualu233.github.io/2016/11/16/python-learning/</id>
    <published>2016-11-16T03:32:52.000Z</published>
    <updated>2016-11-21T01:07:30.997Z</updated>
    
    <content type="html"><![CDATA[<p>实验室培训这次算是听得最有意思的一次，毕竟布置了一个思考问题。虽然这个小问题想了快一天时间，在师兄的帮助下（其实主要还是自己的乱搞下）还算马马虎虎的解决了。网上找了很多资料也没有一个代码上的解决方式，挖个坑记录下。<br><a id="more"></a></p><h2 id="什么是编码？"><a href="#什么是编码？" class="headerlink" title="什么是编码？"></a>什么是编码？</h2><p>形式上还是要在回顾一下什么是编码咯，以下全为我手打错误之处还请指正。先要扯到消息，我们人古老的时候通过说话传递消息，声带振动产生的不同频率其实就可以理解为一种编码。到了现代，我们有了计算机。计算机只有0和1，我们要和计算机交流就需要一种机制。于是有了编码。但是因为世界很大，各个地区有不同的语言，不同语言长得都不一样。但是因为以前没有一个统一的标准，于是有了不同的编码。熟知的就是asc码了，128位的asc码可以表示美国人需要的一切，但是中国人就不能得到满足了。于是新的编码方式就出现了。unicode就是一个新的玩意。</p><h2 id="问题提出"><a href="#问题提出" class="headerlink" title="问题提出"></a>问题提出</h2><p><img src="http://oduatnee6.bkt.clouddn.com/question.png" alt="问题描述"><br>尝试了一下，先输入如下代码，可以看到第一个输出的是乱码，第二个能正常的在控制台输出我要的内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">test=&apos;\xe6\xb3\xa8\xe5\x85\xa5&apos;</div><div class="line">print test</div><div class="line">print test.decode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure></p><p>原因是我的第一个print出的内容是默认安装系统编码来输出的，系统采用asc码是两个字节一读，而我们用的utf-8是三个字节一读。decode的作用是将字符串按照相应的规则解码。</p><p>这样就解决了输出是乱码的问题了。<br>于是我就认为直接将文件里的内容都进来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">f=open(&apos;in.txt&apos;,&apos;r&apos;)</div><div class="line">s=f.read()</div><div class="line">print s.decode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure></p><p>这样就可以了，但是结果<img src="http://oduatnee6.bkt.clouddn.com/q1.png" alt="悲剧了"><br>总结下原因是因为txt里面存的内容是按照ansi编码的，python读进来的‘ \xe6\xb3\xa8\xe5\x85\xa5’这个玩意是重新编码过的。<br>而事实上确实如此，在命令行就能看出来，<br><img src="http://oduatnee6.bkt.clouddn.com/q3.png" alt="悲剧啊"><br>考虑到这样那么就用正则将这些奇怪的传提出来，然后再转换成一个新的串，再decode输出。<br><img src="http://oduatnee6.bkt.clouddn.com/q2.png" alt="233"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#coding=utf-8</div><div class="line">import os,re,sys,binascii</div><div class="line"></div><div class="line">test=&apos;\xe6\xb3\xa8\xe5\x85\xa5&apos;</div><div class="line">print test</div><div class="line">print test.decode(&apos;utf-8&apos;)</div><div class="line"></div><div class="line">f=open(&apos;in.txt&apos;,&apos;r&apos;)</div><div class="line">s=f.read()</div><div class="line">print s</div><div class="line"></div><div class="line">compile=r&apos;\\x[0-9a-f][0-9a-f]&apos;</div><div class="line">r=re.findall(compile,s)</div><div class="line">#print r</div><div class="line">m=&apos;&apos;</div><div class="line">for i in range(len(r)):</div><div class="line">    m+=r[i][2:]</div><div class="line">#print m</div><div class="line"></div><div class="line">n=binascii.a2b_hex(m)</div><div class="line">print n.decode(&apos;utf-8&apos;)</div></pre></td></tr></table></figure></p><h2 id="后续问题"><a href="#后续问题" class="headerlink" title="后续问题"></a>后续问题</h2><p>但是这并不是最终的解决方案，Python提供了这种问题的相应api，但是我还木有找到（捉急啊）。坑先挖了，缘分到了自然能填。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验室培训这次算是听得最有意思的一次，毕竟布置了一个思考问题。虽然这个小问题想了快一天时间，在师兄的帮助下（其实主要还是自己的乱搞下）还算马马虎虎的解决了。网上找了很多资料也没有一个代码上的解决方式，挖个坑记录下。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://meihualu233.github.io/tags/Python/"/>
    
      <category term="编码" scheme="http://meihualu233.github.io/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Python学习之SMTP</title>
    <link href="http://meihualu233.github.io/2016/10/26/python-smtp/"/>
    <id>http://meihualu233.github.io/2016/10/26/python-smtp/</id>
    <published>2016-10-26T08:37:12.000Z</published>
    <updated>2016-10-26T14:06:37.645Z</updated>
    
    <content type="html"><![CDATA[<p>今天看书看到了各种协议，决定试试SMTP协议写个脚本发邮件。然后各种问题~<br>纸上得来终觉浅，绝知此事要躬行。<br><a id="more"></a></p><h2 id="SMTP学习"><a href="#SMTP学习" class="headerlink" title="SMTP学习"></a>SMTP学习</h2><h3 id="第一封脚本发出的邮件"><a href="#第一封脚本发出的邮件" class="headerlink" title="第一封脚本发出的邮件"></a>第一封脚本发出的邮件</h3><p>首先照着第三版Python核心编程示例3-4 email-examples.py 敲了一遍,差不多就是下图的错误。</p><p><div style="center"><img src="http://oduatnee6.bkt.clouddn.com/smtp-error.png" alt="error1"></div><br>简单点解释呢就是我电脑没有SMTP服务，那就用代理咯。</p><hr><p>所以考虑使用QQ，smtp.qq.com<br>1.登陆自己的qq邮箱开启SMTP服务，会得到一个授权码<br><img src="http://oduatnee6.bkt.clouddn.com/smtp-auth.png" alt="qq-1"><br>2.代码也要做一定的修改，需要先登陆SMTP服务<br>然而还是悲剧了，<br><img src="http://oduatnee6.bkt.clouddn.com/smtp-error%20%282%29.png" alt="error-1"><br>如图可见，需要一个secure connection。<br>遂使用smtpObj = smtplib.SMTP_SSL(mail_host,465) SSL方式登陆代理服务器<br><img src="http://oduatnee6.bkt.clouddn.com/smtp-res.png" alt="res-1"></p><p>放一个我调试用的简单的没错的代码，注意mail_user、mail_pass、receivers这三个变量设置根据自己情况设置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line"># -*- coding: UTF-8 -*-</div><div class="line">import smtplib</div><div class="line">from email.mime.text import MIMEText</div><div class="line">from email.header import Header</div><div class="line"># 第三方 SMTP 服务</div><div class="line">mail_host=&quot;smtp.qq.com&quot;  #设置服务器</div><div class="line">mail_user=&quot;yours@qq.com&quot;    #用户名</div><div class="line">mail_pass=&quot;***********&quot;   #口令 这个用自己的，为了安全我不放我的口令了</div><div class="line">sender = mail_user</div><div class="line">receivers = [&apos;TEst@qq.com&apos;]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱</div><div class="line"># 三个参数：第一个为文本内容，第二个 plain 设置文本格式，第三个 utf-8 设置编码</div><div class="line">message = MIMEText(&apos;Python 邮件发送测试...&apos;, &apos;plain&apos;, &apos;utf-8&apos;)</div><div class="line">message[&apos;From&apos;] = Header(&quot;Test&quot;, &apos;utf-8&apos;)</div><div class="line">message[&apos;To&apos;] =  &apos;, &apos;.join(receivers)</div><div class="line">subject = &apos;Python SMTP 邮件测试&apos;</div><div class="line">message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</div><div class="line">try:</div><div class="line">    smtpObj = smtplib.SMTP_SSL(mail_host,465) </div><div class="line">    smtpObj.login(mail_user,mail_pass)  </div><div class="line">    smtpObj.sendmail(sender, receivers, message.as_string())</div><div class="line">    print &quot;邮件发送成功&quot;</div><div class="line">except smtplib.SMTPException,e:</div><div class="line">    print e</div><div class="line">    print &quot;Error: 无法发送邮件&quot;</div></pre></td></tr></table></figure></p><hr><h3 id="发送HTML格式的邮件"><a href="#发送HTML格式的邮件" class="headerlink" title="发送HTML格式的邮件"></a>发送HTML格式的邮件</h3><p>Python发送HTML格式的邮件与发送纯文本消息的邮件不同之处就是将MIMEText中_subtype设置为html。<br>这个代码里和发送文本没有什么大的变化，需要写一个html嵌入到发送的message中即可。主要注意message = MIMEText(mail_msg, ‘html’, ‘utf-8’)这句就好<br><img src="http://oduatnee6.bkt.clouddn.com/smtp-res2.png" alt="res-2"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line"># -*- coding: UTF-8 -*-</div><div class="line">import smtplib</div><div class="line">from email.mime.text import MIMEText</div><div class="line">from email.header import Header</div><div class="line"># 第三方 SMTP 服务</div><div class="line">mail_host=&quot;smtp.qq.com&quot;  #设置服务器</div><div class="line">mail_user=&quot;***@qq.com&quot;    #用户名</div><div class="line">mail_pass=&quot;***&quot;   #口令 </div><div class="line">sender = mail_user</div><div class="line">receivers = [&apos;***@qq.com&apos;]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱</div><div class="line">mail_msg=&quot;&quot;&quot;</div><div class="line">&lt;p&gt;Python 邮件发送测试...&lt;/p&gt;</div><div class="line">&lt;p&gt;&lt;a href=&quot;https://meihualu233.github.io/&quot;&gt;这是一个链接&lt;/a&gt;&lt;/p&gt;</div><div class="line">&quot;&quot;&quot;</div><div class="line">message = MIMEText(mail_msg, &apos;html&apos;, &apos;utf-8&apos;)</div><div class="line">message[&apos;From&apos;] = Header(&quot;Test&quot;, &apos;utf-8&apos;)</div><div class="line">message[&apos;To&apos;] =  &apos;, &apos;.join(receivers)</div><div class="line">subject = &apos;Python SMTP 邮件测试&apos;</div><div class="line">message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</div><div class="line">try:</div><div class="line">    smtpObj = smtplib.SMTP_SSL(mail_host,465) </div><div class="line">    smtpObj.login(mail_user,mail_pass)  </div><div class="line">    smtpObj.sendmail(sender, receivers, message.as_string())</div><div class="line">    print &quot;邮件发送成功&quot;</div><div class="line">except smtplib.SMTPException,e:</div><div class="line">    print e</div><div class="line">    print &quot;Error: 无法发送邮件&quot;</div></pre></td></tr></table></figure></p><hr><h3 id="发送带附件的邮件"><a href="#发送带附件的邮件" class="headerlink" title="发送带附件的邮件"></a>发送带附件的邮件</h3><p>发送带附件的邮件，首先要创建MIMEMultipart()实例，然后构造附件，如果有多个附件，可依次构造，最后利用smtplib.SMTP_SSL发送<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line"># -*- coding: UTF-8 -*-</div><div class="line">import smtplib</div><div class="line">from email.mime.text import MIMEText</div><div class="line">from email.mime.multipart import MIMEMultipart</div><div class="line">from email.header import Header</div><div class="line"># 第三方 SMTP 服务</div><div class="line">mail_host=&quot;smtp.qq.com&quot;  #设置服务器</div><div class="line">mail_user=&quot;****@qq.com&quot;    #用户名</div><div class="line">mail_pass=&quot;****&quot;   #口令 </div><div class="line">sender = mail_user</div><div class="line">receivers = [&apos;****@qq.com&apos;]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱</div><div class="line">#创建一个带附件的实例</div><div class="line">message = MIMEMultipart()</div><div class="line">message[&apos;From&apos;] = Header(&quot;Python SMTP 邮件测试&quot;, &apos;utf-8&apos;)</div><div class="line">message[&apos;To&apos;] =  Header(&quot;TEST&quot;, &apos;utf-8&apos;)</div><div class="line">subject = &apos;Python SMTP 邮件测试&apos;</div><div class="line">message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</div><div class="line">#邮件正文内容</div><div class="line">message.attach(MIMEText(&apos;Python 邮件发送测试……&apos;, &apos;plain&apos;, &apos;utf-8&apos;))</div><div class="line"># 构造附件1，传送当前目录下的 test.txt 文件</div><div class="line">att1 = MIMEText(open(&apos;test.txt&apos;, &apos;rb&apos;).read(), &apos;base64&apos;, &apos;utf-8&apos;)</div><div class="line">att1[&quot;Content-Type&quot;] = &apos;application/octet-stream&apos;</div><div class="line"># 这里的filename可以任意写，写什么名字，邮件中显示什么名字</div><div class="line">att1[&quot;Content-Disposition&quot;] = &apos;attachment; filename=&quot;test1.txt&quot;&apos;</div><div class="line">message.attach(att1)</div><div class="line"># 构造附件2，传送当前目录下的 runoob.txt 文件</div><div class="line">att2 = MIMEText(open(&apos;runoob.txt&apos;, &apos;rb&apos;).read(), &apos;base64&apos;, &apos;utf-8&apos;)</div><div class="line">att2[&quot;Content-Type&quot;] = &apos;application/octet-stream&apos;</div><div class="line">att2[&quot;Content-Disposition&quot;] = &apos;attachment; filename=&quot;test2.txt&quot;&apos;</div><div class="line">message.attach(att2)</div><div class="line">try:</div><div class="line">    smtpObj = smtplib.SMTP_SSL(mail_host,465) </div><div class="line">    smtpObj.login(mail_user,mail_pass)  </div><div class="line">    smtpObj.sendmail(sender, receivers, message.as_string())</div><div class="line">    print &quot;邮件发送成功&quot;</div><div class="line">except smtplib.SMTPException,e:</div><div class="line">    print e</div><div class="line">    print &quot;Error: 无法发送邮件&quot;</div></pre></td></tr></table></figure></p><hr><h3 id="在HTML文本中添加图片"><a href="#在HTML文本中添加图片" class="headerlink" title="在HTML文本中添加图片"></a>在HTML文本中添加图片</h3><p>复杂的一段代码，建立了两个MIMEMultipart实例对象，MIMEMultipart有三个参数mixed,alternative,related。查阅相关资料有这样的解释：<br>如果一封邮件中含有附件，那邮件的ContentType域中必须定义multipart/mixed类型，邮件通过multipart/mixed类型中定义的boundary标识将附件内容同邮件其它内容分成不同的段。(mixed应该是默认的参数)<br>MIME邮件可以传送超文本内容，但出于兼容性的考虑，一般在发送超文本格式内容的同时会同时发送一个纯文本内容的副本，如果邮件中同时存在纯文本和超文本内容，则邮件需要在ContentType域中定义multipart/alternative类型，邮件通过其boundary中的分段标识将纯文本、超文本和邮件的其它内容分成不同的段。<br> MIME邮件中除了可以携带各种附件外，还可以将其它内容以内嵌资源的方式存储在邮件中。比如我们在发送html格式的邮件内容时，可能使用图像作为html的背景，html文本会被存储在alternative段中，而作为背景的图像则会存储在multipart/related类型定义的段中。<br> 所以我们建立的第一个message实例参数用的是’related’，它内部有html还有图片资源；而第二个msgAlternative实例存了一个html文本，所以这里写成msgAlternative = MIMEMultipart()这样也没有问题.<br> <img src="http://oduatnee6.bkt.clouddn.com/smtp-res-3.png" alt="res-3"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python</div><div class="line"># -*- coding: UTF-8 -*-</div><div class="line">import smtplib</div><div class="line">from email.mime.image import MIMEImage</div><div class="line">from email.mime.multipart import MIMEMultipart</div><div class="line">from email.mime.text import MIMEText</div><div class="line">from email.header import Header</div><div class="line"># 第三方 SMTP 服务</div><div class="line">mail_host=&quot;smtp.qq.com&quot;  #设置服务器</div><div class="line">mail_user=&quot;****@qq.com&quot;    #用户名</div><div class="line">mail_pass=&quot;****&quot;   #口令 </div><div class="line">sender = mail_user</div><div class="line">receivers = [&apos;****@qq.com&apos;]  # 接收邮件，可设置为你的QQ邮箱或者其他邮箱</div><div class="line">message = MIMEMultipart(&apos;related&apos;)</div><div class="line">message[&apos;From&apos;] = Header(&quot;Test&quot;, &apos;utf-8&apos;)</div><div class="line">message[&apos;To&apos;] =  &apos;, &apos;.join(receivers)</div><div class="line">subject = &apos;Python SMTP 邮件测试&apos;</div><div class="line">message[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;)</div><div class="line">msgAlternative = MIMEMultipart(&apos;alternative&apos;)</div><div class="line">message.attach(msgAlternative)</div><div class="line">mail_msg=&quot;&quot;&quot;</div><div class="line">&lt;p&gt;Python 邮件发送测试...&lt;/p&gt;</div><div class="line">&lt;p&gt;&lt;a href=&quot;https://meihualu233.github.io/&quot;&gt;这是一个链接&lt;/a&gt;&lt;/p&gt;</div><div class="line">&lt;p&gt;&lt;img src=&quot;cid:image1&quot;&gt;&lt;/p&gt;</div><div class="line">&quot;&quot;&quot;</div><div class="line">msgAlternative.attach(MIMEText(mail_msg,&apos;html&apos;,&apos;utf-8&apos;))</div><div class="line">#指定图片当前目录</div><div class="line">fp=open(&apos;photo.jpg&apos;,&apos;rb&apos;)</div><div class="line">msgImage = MIMEImage(fp.read())</div><div class="line">fp.close()</div><div class="line">#定义图片ID，在HTML文本中引用</div><div class="line">msgImage.add_header(&apos;Content-ID&apos;,&apos;&lt;image1&gt;&apos;)</div><div class="line">message.attach(msgImage)</div><div class="line">try:</div><div class="line">    smtpObj = smtplib.SMTP_SSL(mail_host,465) </div><div class="line">    smtpObj.login(mail_user,mail_pass)  </div><div class="line">    smtpObj.sendmail(sender, receivers, message.as_string())</div><div class="line">    print &quot;邮件发送成功&quot;</div><div class="line">except smtplib.SMTPException,e:</div><div class="line">    print e</div><div class="line">    print &quot;Error: 无法发送邮件&quot;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看书看到了各种协议，决定试试SMTP协议写个脚本发邮件。然后各种问题~&lt;br&gt;纸上得来终觉浅，绝知此事要躬行。&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://meihualu233.github.io/tags/Python/"/>
    
      <category term="SMTP" scheme="http://meihualu233.github.io/tags/SMTP/"/>
    
  </entry>
  
  <entry>
    <title>Python解题报告合集</title>
    <link href="http://meihualu233.github.io/2016/10/24/python-1/"/>
    <id>http://meihualu233.github.io/2016/10/24/python-1/</id>
    <published>2016-10-24T10:50:34.000Z</published>
    <updated>2017-05-26T01:42:02.432Z</updated>
    
    <content type="html"><![CDATA[<p>最近开始学Python，做点cf上的题目来熟悉下语法。挖个坑记录下~</p><a id="more"></a><h2 id="Codeforces-Round-377-Div-2"><a href="#Codeforces-Round-377-Div-2" class="headerlink" title="Codeforces Round #377 (Div. 2)"></a>Codeforces Round #377 (Div. 2)</h2><h3 id="A-Buy-a-Shovel"><a href="#A-Buy-a-Shovel" class="headerlink" title="A. Buy a Shovel"></a>A. Buy a Shovel</h3><p>题目大概意思是给你任意多的10块的和一个r(range(1,10))块，问我买多少k块的东西可以正好不用找钱。</p><p>很明显，无论r是多少k*10 也就是买10个正好不用找钱，所以最后的结果一定小于10。直接从1遍历就好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">k,r=map(int,raw_input().split())</div><div class="line">a=1</div><div class="line">while True:</div><div class="line">if (a*k) %10==0 or (a*k-r) % 10==0:</div><div class="line">break;</div><div class="line">else:</div><div class="line">a=a+1</div><div class="line">print a</div></pre></td></tr></table></figure></p><hr><h3 id="B-Cormen-—-The-Best-Friend-Of-a-Man"><a href="#B-Cormen-—-The-Best-Friend-Of-a-Man" class="headerlink" title="B. Cormen — The Best Friend Of a Man"></a>B. Cormen — The Best Friend Of a Man</h3><p>题目大意是给你n个数，连续的2个的和要大于等于k。问需要增加多少和新序列。<br>直接贪心，从第二个数开始让a[i]+a[i-1]=k，然后扫到结尾就好。主要是学习了Python下的输出方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">n,k=map(int,raw_input().split())</div><div class="line">ans=0</div><div class="line">x=map(int,raw_input().split())</div><div class="line">for i in range(1,n):</div><div class="line">if x[i]+x[i-1] &gt;=k:</div><div class="line">continue</div><div class="line">else:</div><div class="line">t=x[i]</div><div class="line">x[i]=k-x[i-1]</div><div class="line">ans+=x[i]-t</div><div class="line">#print i,ans</div><div class="line">print ans</div><div class="line">for i in range(n):</div><div class="line">print &quot;%d &quot; % x[i],</div><div class="line">#print &apos; &apos;.join(map(str,x))</div></pre></td></tr></table></figure></p><hr><h3 id="C-Sanatorium"><a href="#C-Sanatorium" class="headerlink" title="C. Sanatorium"></a>C. Sanatorium</h3><p>题目大意是一个人到一个地方玩吃了a顿早饭,b顿中饭,c顿晚饭，但是他忘记了某些顿，他只要在这个地方就会去吃饭，直到他离开。<br>我比较蠢，直接模拟了所有的情况。很长（Python 没有else if,有点醉）。但是其实这题很简单因为吃得饭肯定会连续，找到max(a,b,c)-1就解决了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">#这是我的愚蠢代码</div><div class="line">while True:</div><div class="line">a,b,c=map(int,raw_input().split())</div><div class="line">t=min(a,b,c)</div><div class="line">res=0</div><div class="line">a=a-t</div><div class="line">b=b-t</div><div class="line">c=c-t</div><div class="line">if a==0 and b==c:</div><div class="line">if b==0:</div><div class="line">res=0</div><div class="line">else:</div><div class="line">res+=b-1</div><div class="line">print res</div><div class="line">break</div><div class="line">if b==0 and a==c:</div><div class="line">if a==0:</div><div class="line">res=0</div><div class="line">else:</div><div class="line">res+=a-1</div><div class="line">print res</div><div class="line">break</div><div class="line">if c==0 and a==b:</div><div class="line">if a==0:</div><div class="line">res=0</div><div class="line">else:</div><div class="line">res+=a-1</div><div class="line">print res</div><div class="line">break</div><div class="line">if a==0 and b==0:</div><div class="line">res+=2*(c-1)</div><div class="line">print res</div><div class="line">break</div><div class="line">if a==0 and c==0:</div><div class="line">res+=2*(b-1)</div><div class="line">print res</div><div class="line">break</div><div class="line">if b==0 and c==0:</div><div class="line">res+=2*(a-1)</div><div class="line">print res</div><div class="line">break</div><div class="line">if a==0:</div><div class="line">res+=min(b,c)+(max(b,c)-min(b,c)-1)*2</div><div class="line">print res</div><div class="line">break</div><div class="line">if b==0:</div><div class="line">res+=min(a,c)+(max(a,c)-min(a,c)-1)*2</div><div class="line">print res</div><div class="line">break</div><div class="line">if c==0:</div><div class="line">res+=min(a,b)+(max(a,b)-min(a,b)-1)*2</div><div class="line">print res</div><div class="line">break</div></pre></td></tr></table></figure></p><p>聪明的写法。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a=map(int,raw_input().split())</div><div class="line">a.sort()</div><div class="line">print max(a[2]-a[1]-1,0)+max(a[2]-a[0]-1,0)</div></pre></td></tr></table></figure></p><h3 id="D-Exams"><a href="#D-Exams" class="headerlink" title="D. Exams"></a>D. Exams</h3><p>题目大意是n天，m场考试，n天中每天要么有考试要么没有，每场考试需要x天复习。问最少多少天能考完。<br>若存在解，则一定满足：<br>1.记录下来每场考试考完的时间，最终的答案就在这个数列里。<br>2.最终的解一定不会小于，不同考试最快考完的那天的最大值 和 复习天数+m的 总和。<br>所以有了1我们可以二分搜，有了2就可以判断.<br>python里面的二分，烦在数组越界<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">n,m=map(int,raw_input().split())</div><div class="line">x=map(int,raw_input().split())</div><div class="line">y=map(int,raw_input().split())</div><div class="line">#list initial</div><div class="line">mapp=[0 for i in range(m+1)]</div><div class="line">res=[] #binery search this for answer</div><div class="line">tneed=0 #represent the sum of all subject&apos;s minday to pass</div><div class="line">need=m #min day to pass if exists</div><div class="line"></div><div class="line">for i in range(n):</div><div class="line">if x[i]!=0:</div><div class="line">#print &apos;x[i]:&apos;,x[i]</div><div class="line">res.append(i+1)</div><div class="line">if mapp[x[i]]!=0:</div><div class="line">continue</div><div class="line">else:</div><div class="line">mapp[x[i]]=i+1</div><div class="line">tneed=max(tneed,(i+1))</div><div class="line">for i in range(m):</div><div class="line">need+=y[i]</div><div class="line"></div><div class="line">need=max(need,tneed)</div><div class="line">res.sort()</div><div class="line"></div><div class="line">l=0</div><div class="line">r=len(res)</div><div class="line">mid=0</div><div class="line">if r==0:</div><div class="line">print -1</div><div class="line">else:</div><div class="line">while l&lt;=r:</div><div class="line">mid=(l+r)/2</div><div class="line">#print &apos;mid:&apos;,mid</div><div class="line">if mid &gt;=len(res):</div><div class="line">break</div><div class="line">if res[mid]==need:</div><div class="line">break</div><div class="line">else:</div><div class="line">if res[mid]&gt;need:</div><div class="line">r=mid-1</div><div class="line">else:</div><div class="line">l=mid+1</div><div class="line">if mid&gt;=len(res):</div><div class="line">print -1</div><div class="line">else:</div><div class="line">if res[mid]&gt;=need:</div><div class="line">print res[mid]</div><div class="line">else:</div><div class="line">print -1</div></pre></td></tr></table></figure></p><hr><h2 id="Codeforces-Round-376-Div-2"><a href="#Codeforces-Round-376-Div-2" class="headerlink" title="Codeforces Round #376 (Div. 2)"></a>Codeforces Round #376 (Div. 2)</h2><h3 id="A-Night-at-the-Museum"><a href="#A-Night-at-the-Museum" class="headerlink" title="A. Night at the Museum"></a>A. Night at the Museum</h3><p>题目很傻瓜就是给你一个26个字母组成的圆盘，和一个str。像打电话一样的拨这个盘子最少的步数。但是用python有两个问题：<br>1.输入的字母怎么存到一个list里，直接a=raw_input()就可以了。。<br>2.python里头怎么用asc码<br>两个函数，strip()用来切字符串，ord(char)用来得到char的asc<br>拓展一下，chr(),unichr(),ord()三个函数分别求对应asc码的字母，对应unicode的内容。<br>看别人的代码加了个strip()，这个函数有点意思，可以用来去除s.strip(char)，s首尾有char的内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">a=raw_input().strip()</div><div class="line">res=0</div><div class="line">t=&apos;a&apos;</div><div class="line">print a</div><div class="line">for i in range(len(a)):</div><div class="line">a1=ord(a[i])-ord(t)</div><div class="line">a2=ord(t)-ord(a[i])</div><div class="line">if a1&lt;0:</div><div class="line">a1+=26</div><div class="line">if a2&lt;0:</div><div class="line">a2+=26</div><div class="line">res+= min(a1 , a2 )</div><div class="line">t=a[i]</div><div class="line">print res</div></pre></td></tr></table></figure></p><h3 id="B-Coupons-and-Discounts"><a href="#B-Coupons-and-Discounts" class="headerlink" title="B. Coupons and Discounts"></a>B. Coupons and Discounts</h3><p>n个数，可以相邻的两列都减1，或者一列减2，可以重复无数次操作。问能否将n列变成0.<br>直接从做往右扫过去，如果这列i 为偶数个，则ok，若为奇数，则i+1列 -1。如果第i列小于0则不可能。<br>证明这个贪心：如果第i列为奇数不采用和下一列减1的方式，那么它将永远不会为0所以算法成立.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">n=int(raw_input())</div><div class="line">a=map(int,raw_input().split())</div><div class="line">flag=0</div><div class="line">a.append(0)</div><div class="line">for i in range(n):</div><div class="line">if a[i]&lt;0:</div><div class="line">flag=1</div><div class="line">break</div><div class="line">if a[i]%2==0:</div><div class="line">continue</div><div class="line">a[i+1]-=1</div><div class="line">if a[n]==-1:</div><div class="line">flag=1</div><div class="line">if flag==1:</div><div class="line">print &apos;NO&apos;</div><div class="line">else:</div><div class="line">print &apos;YES&apos;</div></pre></td></tr></table></figure></p><h2 id="Codeforces-Round-378-Div-2"><a href="#Codeforces-Round-378-Div-2" class="headerlink" title="Codeforces Round #378 (Div. 2)"></a>Codeforces Round #378 (Div. 2)</h2><p>这场比赛我做了，雪崩啊！</p><h3 id="A-Grasshopper-And-the-String"><a href="#A-Grasshopper-And-the-String" class="headerlink" title="A. Grasshopper And the String"></a>A. Grasshopper And the String</h3><p>题意是一个由26个大写字母组成的序列，只能踩AEIOUY这几个字母，求最大的跨度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">a=raw_input()</div><div class="line">b=[&apos;A&apos;,&apos;E&apos;,&apos;I&apos;,&apos;O&apos;,&apos;U&apos;,&apos;Y&apos;]</div><div class="line"></div><div class="line">len=int(len(a))</div><div class="line">##print len</div><div class="line">t=-1</div><div class="line">res=0</div><div class="line">for i in range(len):</div><div class="line">if a[i] in b:</div><div class="line">res=max(res,i-t)</div><div class="line">t=i</div><div class="line">res=max(len-t,res)</div><div class="line">print res</div></pre></td></tr></table></figure></p><h3 id="B-Parade"><a href="#B-Parade" class="headerlink" title="B. Parade"></a>B. Parade</h3><p>n组分为l列,r列的只能交换一行，l列的数字总和减去r列的数字总和绝对值的最大值是多少。<br>数据量不打n最大为10^5所以模拟即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">n=int(raw_input())</div><div class="line">t1=[]</div><div class="line">t2=[]</div><div class="line">sum1=0</div><div class="line">sum2=0</div><div class="line">for i in range(n):</div><div class="line">a,b=map(int,raw_input().split())</div><div class="line">t1.append(a)</div><div class="line">t2.append(b)</div><div class="line">sum1+=a</div><div class="line">sum2+=b</div><div class="line">tmp=abs(sum1-sum2)</div><div class="line">res=0</div><div class="line">for i in range(n):</div><div class="line">t= abs((sum1-t1[i]+t2[i]) - (sum2-t2[i]+t1[i]))</div><div class="line">if t &gt; tmp:</div><div class="line">res=i+1</div><div class="line">tmp=t</div><div class="line">print res</div></pre></td></tr></table></figure></p><h2 id="Canada-Cup-2016"><a href="#Canada-Cup-2016" class="headerlink" title="Canada Cup 2016"></a>Canada Cup 2016</h2><h3 id="A-Jumping-Ball"><a href="#A-Jumping-Ball" class="headerlink" title="A. Jumping Ball"></a>A. Jumping Ball</h3><p>题目大意是’&lt;’代表板子左高右低，’&gt;’代表相反，一些这样的板子拼起来，小球从那些板子开始放下，球会滚出去。<br>注意到&gt;…..&lt;这个区间内无论怎样球都滑不出去，所以转换成找最大的这个区间，从左边开始找第一个&gt;,右边开始找第一个&lt;。<br>做这道题学会了python里倒叙遍历数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">n=int(raw_input())</div><div class="line">str=raw_input()</div><div class="line"></div><div class="line">##print str[0],&apos;$$$&apos;,str[1]</div><div class="line">left=n</div><div class="line">right=-1</div><div class="line">for i in range(n):</div><div class="line">if str[i]==&apos;&gt;&apos;:</div><div class="line">left=i;</div><div class="line">break;</div><div class="line">for i in range(n)[::-1]:</div><div class="line">if str[i]==&apos;&lt;&apos;:</div><div class="line">right=i;</div><div class="line">break;</div><div class="line">t=right-left+1</div><div class="line">if t&lt;0:</div><div class="line">print n</div><div class="line">else:</div><div class="line">print n-t</div></pre></td></tr></table></figure></p><h3 id="B-Food-on-the-Plane"><a href="#B-Food-on-the-Plane" class="headerlink" title="B. Food on the Plane"></a>B. Food on the Plane</h3><p>题目大意，很简单啦，看懂题目就好了。这题目主要学习了12333f这样前面是数字后面是一个字符的输入python如何处理。然后就是python里头没有map，貌似只有个万能的list。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">ns=raw_input()</div><div class="line">n=ns[:len(ns)-1] ##</div><div class="line">s=ns[-1:]</div><div class="line">n=int(n)</div><div class="line">##print s,&apos;$$$&apos;,n</div><div class="line">t=n/4</div><div class="line">mod=n%4</div><div class="line">if mod==0:</div><div class="line">t=t-1</div><div class="line">mp=&#123;</div><div class="line">&apos;f&apos;:1,</div><div class="line">&apos;e&apos;:2,</div><div class="line">&apos;d&apos;:3,</div><div class="line">&apos;a&apos;:4,</div><div class="line">&apos;b&apos;:5,</div><div class="line">&apos;c&apos;:6,</div><div class="line">&#125;</div><div class="line">res=t*16+mp[s]</div><div class="line">if mod==0 or mod==2:</div><div class="line">res=res+7</div><div class="line">print res</div></pre></td></tr></table></figure></p><p>距离上次做题已经过去了好久咯，下面的代码用py3</p><h2 id="Codeforces-Round-379-Div-2"><a href="#Codeforces-Round-379-Div-2" class="headerlink" title="Codeforces Round #379 (Div. 2)"></a>Codeforces Round #379 (Div. 2)</h2><h3 id="A-Anton-and-Danik"><a href="#A-Anton-and-Danik" class="headerlink" title="A. Anton and Danik"></a>A. Anton and Danik</h3><p>题目大意是给你一个字符串由AD组成比较AD的个数<br>这是我写的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#coding utf-8</div><div class="line">n=int(input())</div><div class="line">s=input()</div><div class="line">s1=0</div><div class="line">s2=0</div><div class="line">for i in range(n):</div><div class="line">if s[i]==&apos;A&apos;:</div><div class="line">s1+=1</div><div class="line">else:</div><div class="line">s2+=1</div><div class="line">if s1==s2:</div><div class="line">print(&quot;Friendship&quot;)</div><div class="line">else:</div><div class="line">if s1&gt;s2:</div><div class="line">print(&quot;Anton&quot;)</div><div class="line">else:</div><div class="line">print(&quot;Danik&quot;)</div></pre></td></tr></table></figure></p><p>对比了一下别人的写法，有了新的发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># coding: utf-8</div><div class="line"></div><div class="line">n = input()</div><div class="line">s = input()</div><div class="line">if s.count(&apos;A&apos;) &gt; s.count(&apos;D&apos;):</div><div class="line">    print(&quot;Anton&quot;)</div><div class="line">elif s.count(&apos;A&apos;) &lt; s.count(&apos;D&apos;):</div><div class="line">    print(&apos;Danik&apos;)</div><div class="line">else:</div><div class="line">    print(&quot;Friendship&quot;)</div><div class="line"></div><div class="line"></div><div class="line">n, s = input(), str(input())</div><div class="line">if s.count(&apos;A&apos;) == s.count(&apos;D&apos;):</div><div class="line">    print(&apos;Friendship&apos;)</div><div class="line">else:</div><div class="line">    print([&quot;Anton&quot;, &quot;Danik&quot;][s.count(&apos;A&apos;)&lt;s.count(&apos;D&apos;)])</div></pre></td></tr></table></figure></p><h2 id="B-Anton-and-Digits"><a href="#B-Anton-and-Digits" class="headerlink" title="B. Anton and Digits"></a>B. Anton and Digits</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#coding utf-8</div><div class="line">k2,k3,k5,k6=map(int,input().split())</div><div class="line">k=min(k2,k5,k6)</div><div class="line">l=min(k3,k2-k)</div><div class="line">print(k*256+l*32)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近开始学Python，做点cf上的题目来熟悉下语法。挖个坑记录下~&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="解题报告" scheme="http://meihualu233.github.io/categories/%E5%AD%A6%E4%B9%A0/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="Python" scheme="http://meihualu233.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>心语</title>
    <link href="http://meihualu233.github.io/2016/10/18/heartvoice/"/>
    <id>http://meihualu233.github.io/2016/10/18/heartvoice/</id>
    <published>2016-10-18T14:45:00.000Z</published>
    <updated>2017-06-29T09:19:06.494Z</updated>
    
    <content type="html"><![CDATA[<p>开个坑记录点诗词啥的。很有意境的那种~<br><img src="http://oduatnee6.bkt.clouddn.com/photo.jpg" alt="我最萌"><br><a id="more"></a></p><blockquote><p>1.<strong>有些人，光是遇见就已经很开心，即使不属于自己。有牵挂的思念，才叫恋爱，有谦让的岁月，才叫婚姻。</strong>如果不适合，千万别将就，与其卑微到尘埃里，不如留一些&gt;骄傲与疼爱给自己。和喜欢的一切在一起，不论怎样，都要自己看上去好一点。（请叫我香姐）<br>前半段很有感觉。</p><p>2.此去经年，应是良辰、美景虚设。便纵有、千种风情，更与何人说。</p><p>3.<strong>人生若只如初见，何事秋风悲画扇。</strong>等闲变却故人心，却道故人心易变。骊山语罢清宵半，泪雨零铃终不怨。何如薄幸锦衣郎，比翼连枝当日愿。</p><p>4.demon和daemon 一个a的区别，一个是恶魔一个是神。</p><p>5.不是你的，不要挽留；不真心想要的，不要将就；若人走情凉，便守心自暖。若聚散难挽，便独享浮世清欢。</p><p>6.春水初生，春林初盛，春风十里，不如你。（冯唐）</p><p>7.林深时遇鹿，海蓝时见鲸，梦醒是有你。</p><p>8.记忆是位奇特的艺术家，他会重新描绘生命的色彩，擦去不完美的部分，只留下最美丽的轮廓和最动人的曲线。(马克。李维)</p><p>9.忘川之上，桑梓之下。一半是光，一半是影。（子不语）</p><p>10.试问岭南应不好，却道。此心安处是吾乡。（苏轼）</p><p>11.现在会莫名的想家，思念的不是单纯的一张床，两个人，三俩朋友。打湿我眼眶的是那年那晚父亲陪我一起打篮球，那时那刻母亲为我做的蒸鸡蛋。</p><p>12.似乎能做最好的朋友，多多少少都是带着爱，时间带走的，是不能弥补的那种失落，再见面，我宁愿你什么都问，就可以聊以后，不问这么多年我怎么过来的。时间带走的比想象还多。</p></blockquote><p>看心情更新。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开个坑记录点诗词啥的。很有意境的那种~&lt;br&gt;&lt;img src=&quot;http://oduatnee6.bkt.clouddn.com/photo.jpg&quot; alt=&quot;我最萌&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="心语" scheme="http://meihualu233.github.io/tags/%E5%BF%83%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>研究生生活-3</title>
    <link href="http://meihualu233.github.io/2016/10/17/gs-life-3/"/>
    <id>http://meihualu233.github.io/2016/10/17/gs-life-3/</id>
    <published>2016-10-17T05:42:26.000Z</published>
    <updated>2016-10-18T14:43:36.627Z</updated>
    
    <content type="html"><![CDATA[<p>10.17号了9.12来的学校，已经过去了一个月的时间了。生活确实充满了波折，最近感觉自己缺少了些什么似得，上课总是提不起精神。也没了开学时候的学习的动力。在这一大前提下，我于此和自己聊天希望能拾回初心。</p><a id="more"></a><p>回顾一个月的生活，开学以来的生活确实挺充实的。但是细细咀嚼总觉得自己做的事情对于未来工作或者是自己的职业规划来看并没有多少大的帮助。<br>还有就是对于未来的学习生活还是有点迷茫，因为实验室的学长来开过一次会。我们实验室是不做科研，做项目的。这是很符合我规划的路线，我自己也就想多接触些正规的项目锻炼自己的能力，为未来能找个好点工作打下基础。但是一个多月下来之后我感觉实验室并没有教会我太多东西，并没有让我多接触到多少项目开发的内容。这一点让我很是失望，也看清了一些事实。<br>我并不能要求别人给我多少，只能自己去把握机会。虽然我觉得自己的学习能力还是不错的，但是若是直接让我上手一个项目的开发，可能还是会有点茫然。对于最新的技术接触的还是比较少。<br>总结一下目前自己的状况：<br>1.知道自己需要学习哪些知识，也确实学习了一些，但是只是在一个最表层的层次。（我知道js,html,python,c,c++,spl，但是却没能深入或者熟练掌握）<br>2.有一种这样的心理，总想等到面临问题了，才会去想着解决方案。而不会自己去寻找问题来解决一次来锻炼自己的能力。<br>3.我渴望历练却又担心自己做不好。有时候自己确实很懒惰，想着要放弃。例如起不来床，偶尔还会打游戏。</p><p>所以肯定是要改变的，我不想这样浪费掉自己的这三年时间。<br>1.我决定专心学习python和linux<br>2.平常要开始研究下论文的相关事宜了</p><p>就这样吧，加油！加油！加油~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;10.17号了9.12来的学校，已经过去了一个月的时间了。生活确实充满了波折，最近感觉自己缺少了些什么似得，上课总是提不起精神。也没了开学时候的学习的动力。在这一大前提下，我于此和自己聊天希望能拾回初心。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="研究生生活" scheme="http://meihualu233.github.io/tags/%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>16年国庆长沙玩耍记录</title>
    <link href="http://meihualu233.github.io/2016/10/07/travel-changsha/"/>
    <id>http://meihualu233.github.io/2016/10/07/travel-changsha/</id>
    <published>2016-10-07T15:31:15.000Z</published>
    <updated>2016-10-18T15:13:09.038Z</updated>
    
    <content type="html"><![CDATA[<p>暑假里就和大哥约好了要去长沙找他玩，一想想时间过的还是真快啊。还记得暑假里想，不急国庆还早呢。一下就到了十一，走之前还在心理盘算2号玩到5号有4天呢，一下就回来了。或许，现在觉得3年很短，一下子就会过完了呢！<br><a id="more"></a></p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><h3 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h3><p>10月1号上午9点的火车k578从成都东开到长沙，2号上午5点才会到。30号通宵了一晚，打算到车上去睡觉的呢。和舒x约好了早上7点出发，一晚没睡的我早上6点半开始流鼻血，熬夜的后遗症。<br>火车上除了中午一顿晚上一顿我都在上铺睡觉，睡到后面腰都有点疼了。还好只是20多个小时，在床上应该度过了18个小时多吧。</p><hr><h3 id="到达"><a href="#到达" class="headerlink" title="到达"></a>到达</h3><p>10月2号，本该5点30到的火车晚点了1个多小时到达长沙的时候已经是6点多了，大哥貌似很早就到了火车站接我们。<br>地铁两站就到了我们住的地方也是大哥工作的地方，锦泰广场。不得不吐槽一下长沙的地铁站和站之间隔得确实比较近，才起步就减速了。虽说我们是6点左右就到了，但是到了酒店大哥就表示要睡觉Zzzz。<br>我本来是不想睡觉（毕竟火车上面睡的太久了），所以大哥和舒x睡觉，我在床上玩手机。下了个最近很热的阴阳师，游戏不错，剧情很棒，画质也很棒，一下子就玩了一个多小时，然而。。我困了。所以，我卸了游戏也睡觉去了。<br>卸载的原因就是我觉得我没时间玩！！！这游戏太花时间了。<br>11点多我饿醒了，然而要等甲鱼到一起去吃饭。所以又睡过去了。到了1点多，甲鱼终于到了。终于能吃饭了！我们四个人跑到楼下吃了不知道484正宗的蒸菜。</p><h3 id="寻找正宗臭豆腐"><a href="#寻找正宗臭豆腐" class="headerlink" title="寻找正宗臭豆腐"></a>寻找正宗臭豆腐</h3><p>吃过了饭，我们就追随甲鱼的步伐去寻找正宗臭豆腐了。为了吃这个正宗的，我们穿越了整个步行街。其实那个臭豆腐是有名字的，我看看能不能打出来“古埃及”（貌似失败了）百度一下叫这个“母娭毑”。虽说地方是有点偏远，在一个小巷子里头；虽说做豆腐的原料也比较让人没有食欲，全是黑色的不明液体。但是味道确实是比较的正宗，味道也还不错就是比较辣。<br>下面是重点，买完了正宗臭豆腐，我们就去了一家网吧。撸了两把就敢去长沙南站接女生了。</p><hr><p>提前吐槽一下，我觉得长沙这里的铁路可能有毒，连高铁过来的都晚点了。而且貌似就没有火车是准点到达的！然后飞机却是准时起飞。</p><hr><h3 id="接人-晚饭"><a href="#接人-晚饭" class="headerlink" title="接人+晚饭"></a>接人+晚饭</h3><p>本该是7点接到的，貌似等到了7点半。先回去的宾馆，然后前往晚饭地点。晚饭的地方貌似靠近万家丽广场，是大哥经常吃烧烤的地方。这里要记录下沿路散发着幽幽蓝光的小房间，吃枣药丸。<br>晚上吃的是小龙虾，龙虾粥还有生蚝，甩饼，都是美食，让现在深夜记录的我肚子咕咕叫。。。<br>对了，其实两个女神以前我只听过名字的不是很熟。所以感觉大家都比较矜持，吃完了之后我们就回宾馆了。</p><hr><p>然而，我们回去之后就跑去了网吧，还办了会员（准备通宵）。还记得当时女生找我们玩你画我猜，我们一个个却在召唤师峡谷。那头应该很无奈吧。</p><hr><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><h3 id="橘子洲"><a href="#橘子洲" class="headerlink" title="橘子洲"></a>橘子洲</h3><p>3号早上本来约好的9点出发因为2号晚上的网吧游而毫无疑问的推迟了。计划赶不上变化快，这句话一点也不假。按照大哥的计划3号是要上午橘子洲，下午梅溪湖的。结果上午就呆被窝咯。不过我是8点多起来的，女生也是。下楼买了造反之后回来就在听歌，一边还在骚扰他们三个起床。值得一提的是，昨晚网吧回来之后，甲鱼把大哥赶回宿舍去睡了，早上用电话死活叫不醒大哥。在大家的持续骚扰下，终于快到10点的时候，大哥才有了反应。<br>在10点多的时候出发了，前往橘子洲。在大哥的成功误导下，我们在橘子洲前一站下了车。穿越了橘子洲大桥，一个问题摆在了我们面前：向左还是向右。甲鱼说右边有啥啥纪念馆，但是左边有毛主席的塑像。稍微在内心权衡了一下，肯定是左边比较具有到此一游的意义，于是我们果断向着左边进发了。<br>在桥上是能眺望到那个塑像的，但是走起来才知道好远。虽说后来回来的时候搭着车开回来也就用了几分钟，但是真的走起来好远好远。可能是我们没有走直线的原因，绕了道，也可能是因为不知道终点在何方时，没有把握就觉得很遥远的关系。总之，现在就是觉得当时的那段路很远。一路上说了些啥，我现在都已经记不清了，貌似最多的是吐槽大哥和舒总比较虚弱。走的确实累，但唯一值得庆幸的是橘子洲真的有橘子，而且舒总不知道从哪里搞了一个能吃的！而且不酸！在这里我坦白，我从树上摘了一个还没熟的。貌似那个被舒总带回了成都。</p><hr><p><img src="http://oduatnee6.bkt.clouddn.com/cs-1.jpg" alt="挂图片"> <img src="http://oduatnee6.bkt.clouddn.com/cs-2.jpg" alt="试试两张并排放"></p><p>经过不懈的努力，终于在12点的样子走到了橘子洲的尽头也就是毛主席塑像的这头。长沙的天还是很蓝的而且貌似我们运气不错，来长沙的这几天天气都非常的nice。照完相片，就可以回去咯。走的话，那是肯定走不动了就选择坐公车回去。再次吐槽一下：20块钱一张的票，服务体验完全不是这个价钱应该享受到的。或许是因为人太多了吧。</p><hr><h3 id="中饭"><a href="#中饭" class="headerlink" title="中饭"></a>中饭</h3><p>公车送大家到橘子洲地铁站，我们决定去五一广场吃中饭。火宫殿的小吃，应该是和南京夫子庙的小吃一样有名吧。估计最特色的就是那个米粉了吧，应该是正宗的本地米粉，至少我以前吃的米粉不是这个样子的。其次，我只记得某一“梅朵”上菜的时候，我又流鼻血了(尴尬)。</p><hr><h3 id="梅溪湖"><a href="#梅溪湖" class="headerlink" title="梅溪湖"></a>梅溪湖</h3><p>吃过饭应该是3点多了吧。整装待发，中午休整了一下下午要去梅溪湖玩耍。甲鱼买的是下午4点30的车票回家，记得是在望城坡。和我们要去的梅溪湖是一个方向。上了地铁因为人多和甲鱼还有大哥他们分开来了，本以为连再见都不能当面说上的。但是甲鱼陪我们坐到了梅溪湖，还陪我们走了一段。不得不说有个本地的地头蛇带路确实要比一个外地在长沙工作了几个月的大哥感觉上靠谱很多。或者也可能是自由行的攻略做的不够，感觉竟在走弯路，不过这也是旅行的一部分吧。生活也一样，未知的东西太多了，因为未知所以会害怕，可是如果把生活当成旅行，未知的只会让人期待，走过的弯路也会成为美好的回忆。</p><hr><h3 id="租车-骑车"><a href="#租车-骑车" class="headerlink" title="租车+骑车"></a>租车+骑车</h3><p>送走了甲鱼，我们打算去租车绕着湖骑着耍。那么问题来了：去哪里租车?问了几个路人告诉我们租车的地方在前面不远的红绿灯处。于是我和大哥两人就决定我们过去把车租回来，结果就走了老远。<br>租的应该算是一辆前后4人的坐的有棚子的车车，本该4个人一起骑得。可是我们有5个人，所以只能两个人在前面骑，3个人在后面加油。一路还和几个初中小妹妹飚起了车，也算是有缘分。后来回去坐地铁的时候也看到她们的呢。<br>应jl要求我们去寻找了一下梅溪湖高级中学(貌似是这个名字)，学校貌似是她喜欢的某一明星的母校。学校确实很高级，从外面看上去就很不错。<br>5个人换着骑车，车是真的跑不快而且骑着累人，还有蚊子会来嗷人，我就记得最后腿是真的好酸，但是却很开心。就像小时候和朋友一起在外面玩一样，虽然不知道玩的是啥，就是很快乐。</p><hr><p>晚饭是回到住的地方吃的，吃的是湘菜不是很辣的那种，只觉得那个排骨很好吃，还有一直小泰迪很可爱。可能是相处了一天的原因，大家也都放的开了。两个女生竟然还有力气说晚上要去找乐子！(听意思是要去酒吧玩)我只想说这体力是真的厉害。<br>那天吃完饭好像也9点多了，我记得当时我洗完澡10点不到在床上就睡着了。</p><hr><h2 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h2><h3 id="岳麓山"><a href="#岳麓山" class="headerlink" title="岳麓山"></a>岳麓山</h3><p>第二天，大哥和舒总又起不来了。我记得我醒的很早，因为7点多的时候又流鼻血了(熬夜后遗症)，起来捯饬了下睡到了8点半起来了。洗洗弄弄，下楼买了早饭回来，已经是9点多了。女生那里也没啥动静，索性就在宾馆听歌。已经记不得是啥时候出发的了，反正也是要接近饭点的时候才到的岳麓山的东门。<br>到岳麓山东门的地铁站是溁XX(只记得第一个字念ying了)。现在才觉得如果计划出去玩没人做好完全的攻略的话，会走很多弯路！以后出去玩一定要做好计划。我们先是从东门进去，才发现这里离着岳麓书院还有要去的爱晚亭好远，于是又折了回来。<br>下了山先去吃饭，吃的是哈利波波自助烧烤？记不大清楚了，但是吃的很棒。吃饭的时候也不知道是谁说的我们应该从南门上山，反正大家就一致同意了。于是吃完了饭我们就直奔南门。</p><hr><p>岳麓山的南门其实是湖南大学，岳麓书院也是在湖南大学里面。不经感慨这个学校真的是一个景点啊。貌似光哥是这个学校的，也不知道他本科四年是怎么过的。<br>趁大哥和舒总找厕所的时候，我们三个体验了一下校内的麦当劳。这个存在景点和校园内的麦当劳人确实多，排队等就等了十多分钟。</p><hr><p>岳麓书院进去要50块钱，我们木有进去在外面游荡了一下就去爬山了。没多久就看到了杜牧口中“停车坐爱枫林晚”的爱晚亭，合影留恋后就向着山顶进发。岳麓山上面真没有什么值得一提的景点，全是墓。我们发现的唯一不是墓的蟒蛇洞，竟然还被我们无情的错过了。沿着山道一路走，下山恰好是湖南师大。接着漫无目的的走竟然走到了上午我们上山的岳麓山东门！这个岳麓山也是小哇。</p><hr><h3 id="晚饭"><a href="#晚饭" class="headerlink" title="晚饭"></a>晚饭</h3><p>东门正好是地铁站，于是我们决定坐地铁去五一广场吃饭。因为xm本来是第二天早上的飞机，所以这顿晚饭应该算是五个人这次长沙之行一起的最后一顿饭。然而因为没赶上飞机的原因，又多了一顿中饭。<br>晚饭吃的是剁椒鱼头火锅，也不知道是啥吃法，反正我是第一次吃。唯一让我记得住的就是蟹子丸丸(一个丸子，名字比较可爱)。</p><hr><h3 id="再也不喝酒了"><a href="#再也不喝酒了" class="headerlink" title="再也不喝酒了"></a>再也不喝酒了</h3><p>吃过晚饭，我们去了一家很贵的ktv，反正在我有钱之前我是不会再去那啥芒果ktv第二次了。<br>喝了点酒，就爱说话了。其实我感觉也没喝多少，就是想讲话。然后就说了很多自己的情感故事。其实也没啥感情经历，也没受过多少情伤，但是就是想说给别人听。<br>可能是有女生在吧，我一直都想听听有些想法，特别是感情方面的事情女生的视觉是啥样的。<br>反正一晚上大家聊得好晚好开心，能遇到说得来的朋友真是我的幸运。</p><hr><h2 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h2><h3 id="飞机飞的太快了"><a href="#飞机飞的太快了" class="headerlink" title="飞机飞的太快了"></a>飞机飞的太快了</h3><p>晚上4点多睡得，xm是9点35的飞机我们推算了下时间决定7点半走(当时太年亲)。计划是做地铁然后换磁悬浮到机场的按照网上的说法应该40分钟左右就能到达。结果出发的时候是8点，磁悬浮也没有想象中的那么迅速。到机场的时候应该是8点50左右，飞机55停止的登机。<br>于是我们三个人就这样体验了一下长沙的磁悬浮。至于为什么是三个人嘛，那是因为大哥和舒总我没能叫醒。。。<br>飞机没赶上就只能改签咯，改签费都块追上买一张新的机票了。而且xm本该是最先道别的，却成为了最后走的那只。所以这个故事告诉我们飞机一定要提前赶。</p><hr><h3 id="赶火车也是匆匆"><a href="#赶火车也是匆匆" class="headerlink" title="赶火车也是匆匆"></a>赶火车也是匆匆</h3><p>下午1点多先是jl回武汉的高铁，然后是2点24我们回成都。只记得一个字“赶”。下次一定要好好计划好时间咯。</p><hr><p>这次长沙国庆4日游，见到了大哥，认识了两位女生；逛了五一广场，瞻仰了橘子洲头的毛主席塑像，爬了岳麓山，见了爱晚亭。讲了一堆真心话，虽然很希望能一直这么疯狂的玩耍，但是生活还是要继续。<br>正是枯燥忙碌的日子才让这样的时刻别样的开心。</p><hr><blockquote><p>这篇算不上游记的回忆写了两天，<br>现在是10.8号晚上21：14分，<br>我坐在实验室，将这段记忆珍藏于此。<br>祝愿今后也能有欢乐的时光</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暑假里就和大哥约好了要去长沙找他玩，一想想时间过的还是真快啊。还记得暑假里想，不急国庆还早呢。一下就到了十一，走之前还在心理盘算2号玩到5号有4天呢，一下就回来了。或许，现在觉得3年很短，一下子就会过完了呢！&lt;br&gt;
    
    </summary>
    
      <category term="旅行" scheme="http://meihualu233.github.io/categories/%E6%97%85%E8%A1%8C/"/>
    
    
      <category term="玩耍" scheme="http://meihualu233.github.io/tags/%E7%8E%A9%E8%80%8D/"/>
    
      <category term="生活" scheme="http://meihualu233.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>数据挖掘课程笔记</title>
    <link href="http://meihualu233.github.io/2016/09/26/datamining-1/"/>
    <id>http://meihualu233.github.io/2016/09/26/datamining-1/</id>
    <published>2016-09-26T08:42:53.000Z</published>
    <updated>2016-10-07T02:30:41.787Z</updated>
    
    <content type="html"><![CDATA[<p>开个坑，记点数据挖掘学的算法，没准就能用上呢。实验室网太渣了，就都是些自己理解的话记录的，错的地方以后改正。</p><a id="more"></a><h2 id="Aprior算法"><a href="#Aprior算法" class="headerlink" title="Aprior算法"></a>Aprior算法</h2><p>这应该是第一个接触到的算法，是应用在挖掘类似超市购物篮商品数据时候的一种效率比较好的算法。下课自己网上差了点资料貌似除了可以用在消费市场价格分析，网络安全领域中的入侵检测技术，高校管理中数据挖掘技术还能有效的开展贫困助学工作。<br>关键词有：置信度、支持度<br>对于A -&gt; B<br>支持度：P(A交B)，既有A又有B的概率<br>置信度：P(B|A)=P(AB)/P(A),在A发生的同时发生B的概率</p><p>候选集（Candidate itemset）：通过向下合并得出的项集。定义为C[k]。<br>频繁集（Frequent itemset）：支持度大于等于特定的最小支持度（Minimum Support/minsup）的项集。表示为L[k]。注意，频繁集的子集一定是频繁集。</p><hr><h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><p>Apriori核心算法过程如下：<br>1.扫描数据库D计算出各个1项集的支持度，得到频繁1项集的集合。<br>2.连接步：为了生成，预先生成,由2个只有一个项不同的属于的频集做一个(k-2)JOIN运算得到的。<br>3.剪枝步：由于是的超集，所以可能有些元素不是频繁的。在潜在k项集的某个子集不是中的成员时,则该潜在频繁项集不可能是频繁的可以从中移去。<br>4.通过扫描数据库D，计算中各个项集的支持度，将中不满足支持度的项集去掉形成。<br>5.通过迭代循环,重复步骤2～4,直到有某个r值使得频繁集为空,这时算法停止。在剪枝步中的每个元素需在交易数据库中进行验证来决定其是否加入,这里的验证过程是算法性能的一个瓶颈。这个方法要求多次扫描可能很大的交易数据库。可能产生大量的候选集,以及可能需要重复扫描数据库,是Apriori算法的两大缺点。</p><p>例子：</p><blockquote><p>计入有项目集合R={1,2,3,4,5}有事务集T：<br>1.{1,2,3}<br>2.{1,2,4}<br>3.{1,3,4}<br>4.{1,2,3,5}<br>5.{1,3,5}<br>6.{2,4,5}<br>7.{1,2,3,4}<br>设定minsup=3/7 minconf=5/7</p><p>1,生成L1:{1}:7,{2}:5,{3}:5,{4}:4,{5}:3<br>2,根据L1生成C2：{1,2}:4,{1,3}:5,{1,4}:3,{1,5}:3,{2,3}:3,{2,4}:3,{2,5}:2,{3,4}:2,{3,5}:2,{4,5}:1<br>剪枝生成L2(不满足minsu&gt;=3/7剪掉):{1,2},{1,3},{1,4},{1,5},{2,3},{2,4}<br>进一步判断L2中得到的集合的子集是否在L1中得到最终的L2(这里并没有不符合要求的)<br>3,根据L2得到C3:{1,2,3}:3,{1,2,4}:2,{1,3,4}:2,{1,2,5}:1,{1,3,5}:2,{1,4,&gt;5}:0,{2,3,4}:1<br>剪枝得到L3(不满足置信度和子集没有在L2中的剪掉):{1,2,3}<br>4,根据L3得到的C4为 空 算法结束</p><p>所以最终的所有的频繁项集(吐槽一下，我一直以为是平凡项集):L1并L2并L3,这&gt;个例子的结果就是{1},{2},{3},{4},{5},{1,2},{1,3},{1,4},{1,5},{2,3},{2,4&gt;},{1,2,3}</p><p>接着根据这些项集生成强关联规则：<br>对于1-项集，貌似没得搞头<br>这里只考虑3-项集：{1,2,3}<br>{1,2} -&gt; {3} ,conf=3/4 &gt; 5/7<br>{1,3} -&gt; {2} ,conf=3/5 &lt; 5/7<br>{2,3} -&gt; {1} ,conf=3/3 &gt; 5/7<br>{1,3} -&gt; {2} 不满足要求</p></blockquote><p>挂一个自己写的C++代码，还没时间写先放着<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line"></div><div class="line">using namespace std;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开个坑，记点数据挖掘学的算法，没准就能用上呢。实验室网太渣了，就都是些自己理解的话记录的，错的地方以后改正。&lt;/p&gt;
    
    </summary>
    
      <category term="数据挖掘" scheme="http://meihualu233.github.io/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
    
      <category term="学习" scheme="http://meihualu233.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>虚拟现实报告资料整理</title>
    <link href="http://meihualu233.github.io/2016/09/22/gs-life-2/"/>
    <id>http://meihualu233.github.io/2016/09/22/gs-life-2/</id>
    <published>2016-09-22T09:02:01.000Z</published>
    <updated>2016-10-07T02:28:34.890Z</updated>
    
    <content type="html"><![CDATA[<p>尼玛的，研究生的课基本都要自己找资料然后上台作报告。申请了下个礼拜的虚拟现实课的演讲，今天开始准备资料，整理到这里，整理好了也就算是有个提纲了。<br><a id="more"></a></p><h2 id="一-要求"><a href="#一-要求" class="headerlink" title="一 要求"></a>一 要求</h2><p>要求是PPT用英文的，讲述可以用中文，20分钟。两个人讲，我们算是第一个讲的题目比较简单，就是再介绍一下虚拟现实技术。第一节课老师就介绍了虚拟现实技术，我们的存在应该就是从我们的角度来介绍虚拟现实技术。</p><hr><h2 id="二-提纲"><a href="#二-提纲" class="headerlink" title="二 提纲"></a>二 提纲</h2><blockquote><p>1.什么是虚拟现实<br>   a.特点（三个特点 immersion interactive imaginative）<br>   b.从现有的几大公司的产品介绍入手<br>   c.应用领域(旅游、医学、教育。。)<br>2.vr出现的同时出现的一些新的技术介绍<br>   a.增强现实技术（微软的HoloLens）<br>   b.比较vr与ar<br>3.vr的发展轨迹 机遇与挑战<br>4.随便扯点</p></blockquote><hr><h2 id="三-资料"><a href="#三-资料" class="headerlink" title="三 资料"></a>三 资料</h2><h3 id="虚拟现实介绍"><a href="#虚拟现实介绍" class="headerlink" title="虚拟现实介绍"></a>虚拟现实介绍</h3><blockquote><p>维基百科定义<br>VR，是virtual reality的缩写，简称虚拟技术，也称虚拟环境，是利用电脑模拟产生一个三维空间的虚拟世界，提供使用者关于&gt;视觉等感官的模拟，让使用者感觉仿佛身历其境，可以及时、没有限制地观察三维空间内的事物。<br>人话版<br>VR，是利用电脑技术再造一个虚拟空间，利用VR设备的头部、动作监测技术追踪用户的动作，再反馈到内容中，为用户提供沉浸<br>式的体验。因为呈现内容全为虚拟，VR设备也往往以全封闭的形式呈现。<br>作者：闹不住菇在搬砖 来源：<a href="https://www.zhihu.com/question/35405781/answer/109627706" target="_blank" rel="external">知乎</a></p></blockquote><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.Immersion(沉浸性)<br>也可理解为“身临其境”，让用户感到自身存在于模拟环境中的真实程度，当用户全身心投入到计算机创建的三维虚拟环境中，感觉一切都是真是的。<br>2.Interactive(交互性)<br>指从模拟环境得到反馈的自然晨读，以及模拟环境内物体的可操作程度。<br>3.Imaginative(构想性)<br>在虚拟现实技术中，人与虚拟环境的交互作用，在本质上意味着它不是预成性的，而是生成性的，它局域一定的想象空间。</p><h3 id="现有的产品"><a href="#现有的产品" class="headerlink" title="现有的产品"></a>现有的产品</h3><p>1.google Cardboard<br><img src="http://oduatnee6.bkt.clouddn.com/Cardboard.jpg =100x100" alt="google Cardboard "><br>2.Facebook Oculus<br><img src="http://oduatnee6.bkt.clouddn.com/Oculus%20Rift.jpg =100x100" alt="Facebook Oculus"><br>3.HTC Vive<br><img src="http://oduatnee6.bkt.clouddn.com/HTC%20Vive.jpg =100x100" alt="HTC Vive"><br>4.Sony PS VR<br><img src="http://oduatnee6.bkt.clouddn.com/PS%20VR.jpg =100x100" alt="Sony PS VR"></p><h3 id="应用领域"><a href="#应用领域" class="headerlink" title="应用领域"></a>应用领域</h3><p>1.旅游景观中的应用<br>通过3D互动技术还原现实中的旅游景区，而从在网上构建一个3D虚拟景区。游客可以通过建立个性化的3D虚拟化身，在3D的景区环境中直接试玩旅游景点,身临其境的查看拟真的景点信息,足不出户的体验千姿百态的风景胜迹以及景点背后的传奇故事。<br>2.医学中的应用<br>在医学领域,虚拟现实技术和现代医学的飞速发展以及两者之间的融合使得虚拟现实技术已开始对生物医学领域产生重大影响。在此领域,虚拟现实应用大致上有两类:一类是虚拟人体,也就是数字化人体,这样的人体模型,使医生更容易了解人体的构造和功能。另一类是虚拟手术系统 , 可用于指导手术的进行。<br>3.艺术教育中的应用<br>作为显不传输信息的媒体,虚拟现实在米来艺术领域所具有的潜在应用能力也是不可低估的。VR所具有的临场参与感与交互能力可 以将静态的艺术(如油问、雕刻等 )转化为动态的,可以使观赏者更好地欣赏作者的思想艺术。另外,VR提高了艺术表现能力,通过动作捕捉系统采集演员的舞蹈动作和表情，在电脑辅助编排下可以预演演出效果,提高编排效率。<br>对艺术的潜在应用价值同样适用于教育行业,如在解释一些复杂的系统抽象的概念如量子物理等方面,VR是非常有力的工具,如“虚拟的物理实验室”,用于解释某些物理概念,如位置与速度,力量与位移等。<br>4.生物力学方面的应用<br>生物力学仿真就是应用力学原理和方法井结合虚拟现实技术,实现对生物体中的力学原理进行虚拟分析与仿真研究。利用虚拟仿真技术研究和表现生物力学,不但可以提高运动物体的真实感,满足运动生物力学专家的计算要求,还可以大大节约研发成木,降低数据分析难度,提高研发效率。这一技术现已广泛应用于外科医学、运动医学、康复医学、人体工学、创伤与防护学等领域。<br>5.工业仿真中的应用<br>当今世界工业的发展非常迅速,已经发生了翻天覆地的变化,现阶段的工业发展不再是大规模的人海战术,需要的是先进的科学技术,特别是虚拟现实技术的应用正对工业发展进行着一场前所未有的革命。虚拟现实技术目前已经被世界上一些大型企业广泛地应用到工业的各个环节,对提高企业开发效率,加强数据采集、分析、处理能力,减少决策失,降低风险起到了重要的作用。</p><p>。。。。还有很多（军事等各个领域都可以用到）</p><p>##AR与VR的比较</p><blockquote><p>维基百科定义<br>AR，是Augmented Reality的简称，是一种实时地计算摄影机影像的位置及角度并加上相应图像的技术，这种技术的目标是在萤幕上把虚拟世界套在现实世界并进行互动。</p><p>人话版<br>AR，是利用电脑技术在现实世界上叠加上新的虚拟内容，相当于是现实世界的增强版。因此，AR设备通常需要保持透明或半透明状态，必须保证体验人员能看到现实场景，并利用集成影像投射原件，丰富现实场景。<br>作者：闹不住菇在搬砖 来源：<a href="https://www.zhihu.com/question/35405781/answer/109627706" target="_blank" rel="external">知乎</a></p></blockquote><hr><p>MR(mixed reality)<br><img src="http://oduatnee6.bkt.clouddn.com/1024px-Reality-Virtuality_Continuum.svg.png" alt="MR模式"><br>微软mr(mixed reality)的发展方向，vr是虚拟现实，偏向于以虚拟方式给人带来真实感受，ar是现实增强技术，偏向于在现实里加入虚拟要素，微软的mr的方向是结合两种技术的特点，以达到将现实和虚拟世界重叠的目的。</p><p>第一阶段：VR大发展<br>1、现阶段，技术进步以及一些大厂的参与已经将VR炒火，但由于技术并没有强大到制作出令人满意的VR设备，所以普及还是有一定难度。另外，VR创造了完全虚拟的空间，给你带个头盔你还可以接受，AR主要融入日常生活中，给你戴个头盔就不是那么方便了。<br>2、在这种情况下，VR会从游戏起步，因为技术现在到达了一种“比现有形式好，但又好不到理想的程度”的状态，这种情况适合应用于游戏这样追求可玩性的场景里。VR先下游戏体验店是一种合适的形态。</p><p>AR在这个时期里各个层面都需要优化，更小的硬件、更强大的系统、更好的图像识别和处理技术、更舒适的显示等。</p><p>第二阶段 AR大发展<br>1、由于AR设备将会给工作生活带来极大便利，它会迅速普及，就像iPhone出来之后智能手机迅速普及那样。没几年你就会发现全世界都用上了AR眼镜，所以估值在那个时候比VR高是很正常的现象！<br>2、而VR在这个阶段会被AR比下去，但是并不会停滞发展，因为VR这阶段会像AR上一阶段那样，处于发展和蓄力阶段。它需要在这阶段解决：人体信息精确收集和显示、显示画面逼近真实、触感反馈、嗅觉和味觉、失重、微动控制、表情输入输出、甚至脑机接口、神经接口等等更加细节的技术问题，以待下一阶段爆发。</p><p>第三阶段 VR回归二者融合<br>1、如果你能VR仓里就能进入非常逼真的虚拟办公室跟同事像现在工作那样正常交流，你还会浪费每天5个小时在北京的地铁里么？如果你能在VR仓里想去哪就去哪，这一秒还在纽约看高楼林立，下一秒就在南极看企鹅，一切都跟真实的一样，你还会浪费人力物力财力时间去飞各种地方么？如果你能在游戏里亲手屠龙，争霸天下，你还会去玩屏幕游戏、AR游戏么？<br>2、不确定性太大。</p><p>作者:闫展逸 来源：<a href="https://www.zhihu.com/question/20191042" target="_blank" rel="external">知乎</a></p><hr><p>VR发展曲线，根据德银的报告可以类比：<br>1.互联网的发展<br>2.智能手机的发展</p><p>基于这两项技术的发展轨迹，尤其是智能手机的发展，或许能很好地预测出未来10年VR的发展趋势，因为正是智能手机应用和生态系统推动了VR的发展，而且两者的内容分发机制看起来也是类似的。</p><p>在2007年之前，智能手机的形式多种多样。直至2007年iPhone上市后，智能手机时代才真正来临。iPhone的出现引发了智能手机的新一轮创新，并且一直持续到今天。</p><p>不出所料，第一代iPhone上市后遭到了媒体和竞争对手的指责，称苹果只是将iPod与普通手机整合，形成了iPhone。从表面上看，这属于“增量式创新”，而不是“革命性创新”。对于历史，我们再熟悉不过了。对于一款新产品，最初发展较慢，然后逐步普及，最终爆炸式增长。摩尔定律让智能手机的功能越来越强大，苹果和谷歌的激烈竞争推动了智能手机在硬件和软件方面的极大创新。</p><p><img src="http://oduatnee6.bkt.clouddn.com/smartphone.jpg" alt="此处要配图"></p><p>鉴于当前已出现三款台式机VR平台，以及大量的移动VR头盔， VR市场也将出现类似于智能手机市场的激烈竞争环境。其中很重要的一个表现就是，快速的开发周期和产品发布。</p><p>在之前的2~3年，就已经出现了这一现象，厂商不断推出新版本的台式机VR开发者工具包。</p><p>但与两年前相比，当前用于解决VR技术问题的资金和开发人员数量已是当初的10倍，是5年前的100倍。自Facebook收购Oculus以来，VR领域的风险投资增长了3倍。而且，几乎每天都有VR公司宣布获得投资。</p><p>简而言之，基于普及周期，当前的VR生态系统相当于2007年的智能手机发展现状。在美国，智能手机用户突破1亿用了4~5年时间。VR的普及曲线会相对较慢，但足以撑起一个庞大的市场。</p><hr><p>##扯点VR色情带来的东东</p><p>都是找的资料，对于我的看法嘛。我表示在VR像智能手机普及之时，我可能才会开始考虑这个问题。</p><p>就VR的技术发展来说，我们当然希望它呈现的效果越逼真越好。不过一谈到色情，好像还得斟酌一下。</p><p>　　已有多位心理学家站出来指出，色情消费内容越来越真实，不见得是一件好事情。</p><p>　　“色情片里面那种性描绘镜头并不真实，不是适合初入两性关系的人的“教材”。因为那都是职业演员‘假装’出来的。观看者要有能力去辨别。观众看影片上那么有激情，实际自己去做可能感觉很一般般。如此会觉得自己受到欺骗。”性学家马蒂·克莱恩（Marty Klein,）告诉笔者。“这些成人影片的消费者——以及他/她们的伴侣——应该认识到影片和现实生活不一样。”</p><p>　　VR色情还未成气候，不过随着VR设备的普及，这种消费内容会迅速普流传开来。就其所能带来的“身临其境”这一效果来说，远非普通杂志或DVD视频所能比。笔者用iPhone5和Homido VR搭建一个简单的VR设备，上网简单“体验”了一下所谓的VR色情。和平常视频网站包罗万象的繁多不同，现在能观看的VR色情内容还很少。不过就其体验来说，尽管是像笔者这样简陋的VR设备，效果也破令人印象深刻。</p><p>　　加州大学洛杉矶分校的教授尼尔·马拉姆斯（Neil Malamuth）是色情视频研究专家。他最近也小小体验了一下VR色情的威力。“不得不承认这是前所未有的体验。”他说，“感觉好像你真的和那姑娘坐在同一个房间里，她跟你说话的时候直视着你的眼睛。和传统视频相比，这会是更私密的观看体验。窥淫癖的春天要来了。”</p><p>　　只不过目前的VR色情还是“表演-观看”这种单向的，无法让观看者真正参与和互动。</p><p>　　如此为隐秘欲望大开方便，难恐不会对个人心理和社会健康产生影响。</p><p>　　在今年前些时间的一次采访中，马拉姆斯对比了色情和酒精对人的影响：“如果你问我，酒是好是坏？我会回答，这得看你怎么用它。对那些酗酒败家的酒鬼来说，酒精当然是坏的。对另外一些人来说，如果他们使用适当的话，酒能帮他们缓解压力，营造情趣。我认为色情也一样有这种双面影响，是好是坏，关键看你怎么用。”</p><p>　　如此说来，VR色情的影响也会因人而异。由于VR色情提供的体验更加逼真，这会更加勾起那些色情狂的犯罪倾向。“对那些濒临犯罪边缘的少数人来说，色情片就像是火上浇油，让他们失去理智，欲望冲昏头脑而做出不应该的事。”马拉姆斯说。</p><p>　　另一方面，如果观看恰当，那些成人内容也可以起到行为示范的作用，从而帮助观看者更好地体验到性乐趣。“有些人不习惯跟真人发生性关系，那么观看色情影片能为他们的欲望提供释放出口。”</p><p>　　不是所有人都这么忧心忡忡如临大敌。临床心理学家大卫·莱伊博士说：“人们对VR色情的恐惧应该也和过去那些情况一样，是一种技术恐惧。”就像以前人认为骑自行车会让女人变同性恋。也曾有人担心女用自慰器的存在会威胁到女性对男性的需求度。美国犹他州还有一种论调称：互联网上泛滥的色情内容会完全毁了青少年对婚姻的美好向往。孩子会认为男女之间就是性交，而以前的浪漫和温暖没了。</p><p>　　“我不觉得VR色情能掀起多大浪。”莱伊博士补充道。“因为观看VR需要更多更积极的准备，比方说要买头盔，要寻找片源，还得躲开人群观看这么劲爆的东西。然而别忘了懒是人的天性，不见得有多少人会为了几分钟的立体视频而大费周章。”</p><p>　　VR技术还可以帮助用户调换性行为中自己的角色。比如一个男性可以先择从女子的视角体验整个交合过程。“你低头一看，惊讶地发现这是自己的胸部和修长的双腿。”马拉姆斯说道，“这会是全新的体验。当然有些人可能不好这口。不过我想对大多数人来说，这种新奇的性经历和感官体验都会是挺有趣的事。”</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尼玛的，研究生的课基本都要自己找资料然后上台作报告。申请了下个礼拜的虚拟现实课的演讲，今天开始准备资料，整理到这里，整理好了也就算是有个提纲了。&lt;br&gt;
    
    </summary>
    
      <category term="虚拟现实" scheme="http://meihualu233.github.io/categories/%E8%99%9A%E6%8B%9F%E7%8E%B0%E5%AE%9E/"/>
    
    
      <category term="作业" scheme="http://meihualu233.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
      <category term="学习生活" scheme="http://meihualu233.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>研究生生活-1</title>
    <link href="http://meihualu233.github.io/2016/09/21/gs-life/"/>
    <id>http://meihualu233.github.io/2016/09/21/gs-life/</id>
    <published>2016-09-21T02:29:45.000Z</published>
    <updated>2016-10-08T06:00:42.212Z</updated>
    
    <content type="html"><![CDATA[<p>今天那是9月21号，第一天来实验室打卡，现在坐在实验室里很是无聊。决定把暑假搭好的这个小窝利用一下，记录一点现在的心情。以后自己也会常来这里维护维护吧。</p><a id="more"></a><p>2016年9月11日，我一个人，坐着k1156号列车从南京出发。9月12日下午3点30分到达成都。虽说已经一个人来上学了很多次了，但是这一次内心却有着不一样的想法。</p><hr><p>暑假里把车学了，感觉自己从台湾回来之后就长大了，反正不是那么害羞了。有的时候还是会胆怯，但是关键的时候自己渐渐变得也没有那么害怕面对陌生的环境和事物了。但是偶尔还是会觉得难过，是那种没有原因的难过不开心，可以遇见的是在未来的某些夜深人静的时候，自己会默默的感伤吧。</p><hr><p>报道前，还没决定要参加下行政工作的我，也不知道12号晚上是哪根神经打错了位置报名竞选了班委。结果当上了，当上了之后就是一堆事情要做。(这里也记录下，免得到时候要写工作总结的时候没话说 哈哈。)</p><blockquote><p>1.分了收户口迁移证的工作给我（这是个坑，后面再写）<br>2.接着是班级学生信息的录入(目前还没弄完)<br>3.建QQ群拉人进来（至今没找全）<br>4.修订班委工作条例(还没弄完)<br>5.收集班级同学火车乘车优惠区间(妈呀，也没弄完，主要是有人不交)</p></blockquote><hr><p>好吧，我懒癌又犯了，不填坑了。<br>写点今后的打算吧:</p><blockquote><p>1.既然当上了班长，那估计以后就要忙了，每学期至少搞一次班级的活动吧<br>2.实验室要打卡，每周有时间限制，所以实验室要常来咯,对了还要学技术做项目，写论文<br>3.研究生的课也不是简单的要好好学习啊<br>4.还要锻炼哦</p></blockquote><hr><p>过几天研究下怎么挂图片~~<br><img src="http://oduatnee6.bkt.clouddn.com/test.jpg" alt="测试用图"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天那是9月21号，第一天来实验室打卡，现在坐在实验室里很是无聊。决定把暑假搭好的这个小窝利用一下，记录一点现在的心情。以后自己也会常来这里维护维护吧。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://meihualu233.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="http://meihualu233.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="随笔" scheme="http://meihualu233.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="研究生生活" scheme="http://meihualu233.github.io/tags/%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
